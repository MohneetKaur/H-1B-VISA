{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kThzq5hfEZt1",
    "outputId": "8fed45a1-0ce3-4ead-dec3-6b3060bf71c8"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "#import missingno as mno\n",
    "#from category_encoders import BinaryEncoder\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3165: DtypeWarning: Columns (4,13,14,20,22,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,53,54,57,58,59,61,64,66,67,68,69,70,71,72,73,76,78,79,80,82,85,87,88,89,90,91,92,93,94,97,98,99,100,101,103,106,108,109,110,111,112,113,114,115,121,122,124,127,129,130,131,132,133,134,135,136,142,143,145,148,150,151,152,153,154,155,156,157,160,162,163,164,166,169,171,172,173,174,175,176,177,178,184,185,187,190,192,193,194,195,196,197,198,199,205,206,208,211,213,214,215,216,217,218,219,220,223,225,226,227,229,232,234,235,236,237,238,239,240,244,246,247,248,250,253,257,258,259) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n"
     ]
    }
   ],
   "source": [
    "dataset=pd.read_csv(r'E:\\Technocolabs\\Dataset\\data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_NUMBER</th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>CASE_SUBMITTED</th>\n",
       "      <th>DECISION_DATE</th>\n",
       "      <th>ORIGINAL_CERT_DATE</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>...</th>\n",
       "      <th>PW_OTHER_SOURCE_10</th>\n",
       "      <th>PW_NON-OES_YEAR_10</th>\n",
       "      <th>PW_SURVEY_PUBLISHER_10</th>\n",
       "      <th>PW_SURVEY_NAME_10</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>WILLFUL_VIOLATOR</th>\n",
       "      <th>SUPPORT_H1B</th>\n",
       "      <th>STATUTORY_BASIS</th>\n",
       "      <th>MASTERS_EXEMPTION</th>\n",
       "      <th>PUBLIC_DISCLOSURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I-200-16092-327771</td>\n",
       "      <td>WITHDRAWN</td>\n",
       "      <td>08-04-2016</td>\n",
       "      <td>30-04-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ASSOCIATE CREATIVE DIRECTOR</td>\n",
       "      <td>Nov-11</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>Y</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I-203-17188-450729</td>\n",
       "      <td>WITHDRAWN</td>\n",
       "      <td>14-07-2017</td>\n",
       "      <td>13-05-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E-3 Australian</td>\n",
       "      <td>ACCOUNT SUPERVISOR (MOTHER)</td>\n",
       "      <td>Nov-11</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>Y</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>I-203-17229-572307</td>\n",
       "      <td>WITHDRAWN</td>\n",
       "      <td>23-08-2017</td>\n",
       "      <td>30-04-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E-3 Australian</td>\n",
       "      <td>EXECUTIVE CREATIVE DIRECTOR</td>\n",
       "      <td>Nov-11</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>Y</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I-203-17356-299648</td>\n",
       "      <td>WITHDRAWN</td>\n",
       "      <td>22-12-2017</td>\n",
       "      <td>20-08-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E-3 Australian</td>\n",
       "      <td>PROJECT MANAGEMENT LEAD</td>\n",
       "      <td>Nov-11</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>Y</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I-203-18008-577576</td>\n",
       "      <td>WITHDRAWN</td>\n",
       "      <td>10-01-2018</td>\n",
       "      <td>15-04-2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E-3 Australian</td>\n",
       "      <td>CREATIVE DIRECTOR, UX</td>\n",
       "      <td>Nov-11</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>Y</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 260 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          CASE_NUMBER CASE_STATUS CASE_SUBMITTED DECISION_DATE  \\\n",
       "0  I-200-16092-327771   WITHDRAWN     08-04-2016    30-04-2019   \n",
       "1  I-203-17188-450729   WITHDRAWN     14-07-2017    13-05-2019   \n",
       "2  I-203-17229-572307   WITHDRAWN     23-08-2017    30-04-2019   \n",
       "3  I-203-17356-299648   WITHDRAWN     22-12-2017    20-08-2019   \n",
       "4  I-203-18008-577576   WITHDRAWN     10-01-2018    15-04-2019   \n",
       "\n",
       "  ORIGINAL_CERT_DATE      VISA_CLASS                    JOB_TITLE SOC_CODE  \\\n",
       "0                NaN            H-1B  ASSOCIATE CREATIVE DIRECTOR   Nov-11   \n",
       "1                NaN  E-3 Australian  ACCOUNT SUPERVISOR (MOTHER)   Nov-11   \n",
       "2                NaN  E-3 Australian  EXECUTIVE CREATIVE DIRECTOR   Nov-11   \n",
       "3                NaN  E-3 Australian      PROJECT MANAGEMENT LEAD   Nov-11   \n",
       "4                NaN  E-3 Australian        CREATIVE DIRECTOR, UX   Nov-11   \n",
       "\n",
       "                             SOC_TITLE FULL_TIME_POSITION  ...  \\\n",
       "0  ADVERTISING AND PROMOTIONS MANAGERS                  Y  ...   \n",
       "1  ADVERTISING AND PROMOTIONS MANAGERS                  Y  ...   \n",
       "2  ADVERTISING AND PROMOTIONS MANAGERS                  Y  ...   \n",
       "3  ADVERTISING AND PROMOTIONS MANAGERS                  Y  ...   \n",
       "4  ADVERTISING AND PROMOTIONS MANAGERS                  Y  ...   \n",
       "\n",
       "  PW_OTHER_SOURCE_10 PW_NON-OES_YEAR_10  PW_SURVEY_PUBLISHER_10  \\\n",
       "0                NaN                NaN                     NaN   \n",
       "1                NaN                NaN                     NaN   \n",
       "2                NaN                NaN                     NaN   \n",
       "3                NaN                NaN                     NaN   \n",
       "4                NaN                NaN                     NaN   \n",
       "\n",
       "  PW_SURVEY_NAME_10 H-1B_DEPENDENT  WILLFUL_VIOLATOR  SUPPORT_H1B  \\\n",
       "0               NaN              N                 N          NaN   \n",
       "1               NaN            NaN               NaN          NaN   \n",
       "2               NaN            NaN               NaN          NaN   \n",
       "3               NaN            NaN               NaN          NaN   \n",
       "4               NaN            NaN               NaN          NaN   \n",
       "\n",
       "   STATUTORY_BASIS  MASTERS_EXEMPTION PUBLIC_DISCLOSURE  \n",
       "0              NaN                NaN               NaN  \n",
       "1              NaN                NaN               NaN  \n",
       "2              NaN                NaN               NaN  \n",
       "3              NaN                NaN               NaN  \n",
       "4              NaN                NaN               NaN  \n",
       "\n",
       "[5 rows x 260 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "KgGDOKJP_aN0",
    "outputId": "72325969-a4a7-4334-f106-78685bf3fa68"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(664616, 260)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "id": "fJeGTiAsAdQT"
   },
   "outputs": [],
   "source": [
    "dataset.drop(dataset[dataset['VISA_CLASS'] == 'E-3 Australian'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['VISA_CLASS'] == 'H-1B1 Singapore'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['VISA_CLASS'] == 'H-1B1 Chile'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['VISA_CLASS'] == 'nan'].index, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(649083, 260)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 411
    },
    "id": "7y_izgZW_hj0",
    "outputId": "90dc4c0f-f12c-4bfa-c841-3a829d0cbfdd"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>WORKSITE_WORKERS_1</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>PW_OES_YEAR_1</th>\n",
       "      <th>PW_NON-OES_YEAR_1</th>\n",
       "      <th>...</th>\n",
       "      <th>PW_NON-OES_YEAR_9</th>\n",
       "      <th>PW_SURVEY_PUBLISHER_9</th>\n",
       "      <th>WORKSITE_WORKERS_10</th>\n",
       "      <th>WORKSITE_POSTAL_CODE_10</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_10</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_10</th>\n",
       "      <th>PREVAILING_WAGE_10</th>\n",
       "      <th>PW_OES_YEAR_10</th>\n",
       "      <th>PW_NON-OES_YEAR_10</th>\n",
       "      <th>PW_SURVEY_PUBLISHER_10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>649081.000000</td>\n",
       "      <td>649083.000000</td>\n",
       "      <td>649082.000000</td>\n",
       "      <td>649083.000000</td>\n",
       "      <td>649083.000000</td>\n",
       "      <td>649081.000000</td>\n",
       "      <td>568352.000000</td>\n",
       "      <td>616606.000000</td>\n",
       "      <td>72405.000000</td>\n",
       "      <td>5.422580e+05</td>\n",
       "      <td>...</td>\n",
       "      <td>290.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>249.000000</td>\n",
       "      <td>249.000000</td>\n",
       "      <td>249.000000</td>\n",
       "      <td>87.000000</td>\n",
       "      <td>249.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>194.000000</td>\n",
       "      <td>52.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.616110</td>\n",
       "      <td>0.123349</td>\n",
       "      <td>0.013434</td>\n",
       "      <td>0.259089</td>\n",
       "      <td>0.227156</td>\n",
       "      <td>451982.393977</td>\n",
       "      <td>5.182023</td>\n",
       "      <td>84144.216488</td>\n",
       "      <td>2020.633824</td>\n",
       "      <td>2.035713e+03</td>\n",
       "      <td>...</td>\n",
       "      <td>2018.420690</td>\n",
       "      <td>2017.888889</td>\n",
       "      <td>2.678715</td>\n",
       "      <td>43719.132530</td>\n",
       "      <td>136585.080442</td>\n",
       "      <td>165922.504713</td>\n",
       "      <td>98629.426225</td>\n",
       "      <td>2017.980769</td>\n",
       "      <td>2018.417526</td>\n",
       "      <td>2017.980769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.470281</td>\n",
       "      <td>0.917180</td>\n",
       "      <td>0.286389</td>\n",
       "      <td>1.120431</td>\n",
       "      <td>0.904593</td>\n",
       "      <td>189166.910045</td>\n",
       "      <td>494.548938</td>\n",
       "      <td>35481.544014</td>\n",
       "      <td>407.803120</td>\n",
       "      <td>1.185891e+04</td>\n",
       "      <td>...</td>\n",
       "      <td>0.547646</td>\n",
       "      <td>0.674683</td>\n",
       "      <td>5.572215</td>\n",
       "      <td>29026.586728</td>\n",
       "      <td>101802.213376</td>\n",
       "      <td>117556.218422</td>\n",
       "      <td>60775.054739</td>\n",
       "      <td>0.312509</td>\n",
       "      <td>0.544308</td>\n",
       "      <td>0.312509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2013.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2115.000000</td>\n",
       "      <td>24.550000</td>\n",
       "      <td>31.480000</td>\n",
       "      <td>24.550000</td>\n",
       "      <td>2017.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2017.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>454111.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>68806.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2.018000e+03</td>\n",
       "      <td>...</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>18510.000000</td>\n",
       "      <td>58224.000000</td>\n",
       "      <td>71789.000000</td>\n",
       "      <td>58067.190000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>541511.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>84240.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2.018000e+03</td>\n",
       "      <td>...</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>40383.000000</td>\n",
       "      <td>94557.000000</td>\n",
       "      <td>140909.000000</td>\n",
       "      <td>73317.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>541512.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>102181.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2.019000e+03</td>\n",
       "      <td>...</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>70380.000000</td>\n",
       "      <td>210000.000000</td>\n",
       "      <td>219816.500000</td>\n",
       "      <td>132129.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>594.000000</td>\n",
       "      <td>338.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>928120.000000</td>\n",
       "      <td>160500.000000</td>\n",
       "      <td>849680.000000</td>\n",
       "      <td>72000.000000</td>\n",
       "      <td>8.731800e+06</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>99218.000000</td>\n",
       "      <td>525000.000000</td>\n",
       "      <td>500000.000000</td>\n",
       "      <td>282235.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows Ã— 82 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       TOTAL_WORKER_POSITIONS  CHANGE_PREVIOUS_EMPLOYMENT  \\\n",
       "count           649081.000000               649083.000000   \n",
       "mean                 1.616110                    0.123349   \n",
       "std                  4.470281                    0.917180   \n",
       "min                  1.000000                    0.000000   \n",
       "25%                  1.000000                    0.000000   \n",
       "50%                  1.000000                    0.000000   \n",
       "75%                  1.000000                    0.000000   \n",
       "max                594.000000                  338.000000   \n",
       "\n",
       "       NEW_CONCURRENT_EMPLOYMENT  CHANGE_EMPLOYER  AMENDED_PETITION  \\\n",
       "count              649082.000000    649083.000000     649083.000000   \n",
       "mean                    0.013434         0.259089          0.227156   \n",
       "std                     0.286389         1.120431          0.904593   \n",
       "min                     0.000000         0.000000          0.000000   \n",
       "25%                     0.000000         0.000000          0.000000   \n",
       "50%                     0.000000         0.000000          0.000000   \n",
       "75%                     0.000000         0.000000          0.000000   \n",
       "max                    99.000000        99.000000         99.000000   \n",
       "\n",
       "          NAICS_CODE  WORKSITE_WORKERS_1  PREVAILING_WAGE_1  PW_OES_YEAR_1  \\\n",
       "count  649081.000000       568352.000000      616606.000000   72405.000000   \n",
       "mean   451982.393977            5.182023       84144.216488    2020.633824   \n",
       "std    189166.910045          494.548938       35481.544014     407.803120   \n",
       "min        31.000000            1.000000           7.250000       1.000000   \n",
       "25%    454111.000000            1.000000       68806.000000    2018.000000   \n",
       "50%    541511.000000            1.000000       84240.000000    2018.000000   \n",
       "75%    541512.000000            1.000000      102181.000000    2018.000000   \n",
       "max    928120.000000       160500.000000      849680.000000   72000.000000   \n",
       "\n",
       "       PW_NON-OES_YEAR_1  ...  PW_NON-OES_YEAR_9  PW_SURVEY_PUBLISHER_9  \\\n",
       "count       5.422580e+05  ...         290.000000              63.000000   \n",
       "mean        2.035713e+03  ...        2018.420690            2017.888889   \n",
       "std         1.185891e+04  ...           0.547646               0.674683   \n",
       "min         1.000000e+00  ...        2018.000000            2013.000000   \n",
       "25%         2.018000e+03  ...        2018.000000            2018.000000   \n",
       "50%         2.018000e+03  ...        2018.000000            2018.000000   \n",
       "75%         2.019000e+03  ...        2019.000000            2018.000000   \n",
       "max         8.731800e+06  ...        2020.000000            2019.000000   \n",
       "\n",
       "       WORKSITE_WORKERS_10  WORKSITE_POSTAL_CODE_10  WAGE_RATE_OF_PAY_FROM_10  \\\n",
       "count           249.000000               249.000000                249.000000   \n",
       "mean              2.678715             43719.132530             136585.080442   \n",
       "std               5.572215             29026.586728             101802.213376   \n",
       "min               1.000000              2115.000000                 24.550000   \n",
       "25%               1.000000             18510.000000              58224.000000   \n",
       "50%               1.000000             40383.000000              94557.000000   \n",
       "75%               1.000000             70380.000000             210000.000000   \n",
       "max              45.000000             99218.000000             525000.000000   \n",
       "\n",
       "       WAGE_RATE_OF_PAY_TO_10  PREVAILING_WAGE_10  PW_OES_YEAR_10  \\\n",
       "count               87.000000          249.000000       52.000000   \n",
       "mean            165922.504713        98629.426225     2017.980769   \n",
       "std             117556.218422        60775.054739        0.312509   \n",
       "min                 31.480000           24.550000     2017.000000   \n",
       "25%              71789.000000        58067.190000     2018.000000   \n",
       "50%             140909.000000        73317.000000     2018.000000   \n",
       "75%             219816.500000       132129.000000     2018.000000   \n",
       "max             500000.000000       282235.000000     2019.000000   \n",
       "\n",
       "       PW_NON-OES_YEAR_10  PW_SURVEY_PUBLISHER_10  \n",
       "count          194.000000               52.000000  \n",
       "mean          2018.417526             2017.980769  \n",
       "std              0.544308                0.312509  \n",
       "min           2018.000000             2017.000000  \n",
       "25%           2018.000000             2018.000000  \n",
       "50%           2018.000000             2018.000000  \n",
       "75%           2019.000000             2018.000000  \n",
       "max           2020.000000             2019.000000  \n",
       "\n",
       "[8 rows x 82 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "5LyBGykyByaX",
    "outputId": "c8bcb07e-5ca8-4462-b0a8-7721aca36cf4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['H-1B'], dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['VISA_CLASS'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_NUMBER           object\n",
       "CASE_STATUS           object\n",
       "CASE_SUBMITTED        object\n",
       "DECISION_DATE         object\n",
       "ORIGINAL_CERT_DATE    object\n",
       "                       ...  \n",
       "WILLFUL_VIOLATOR      object\n",
       "SUPPORT_H1B           object\n",
       "STATUTORY_BASIS       object\n",
       "MASTERS_EXEMPTION     object\n",
       "PUBLIC_DISCLOSURE     object\n",
       "Length: 260, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['WITHDRAWN', 'CERTIFIED-WITHDRAWN', 'CERTIFIED', 'DENIED'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['CASE_STATUS'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping case status which aren't neede\n",
    "dataset.drop(dataset[dataset['CASE_STATUS'] == 'CERTIFIED-WITHDRAWN'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['CASE_STATUS'] == 'WITHDRAWN'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['CASE_STATUS'] == 'Nan'].index, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(583806, 260)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['UNITED STATES OF AMERICA', 'CANADA', 'TURKEY', 'INDIA',\n",
       "       'GUATEMALA', 'AFGHANISTAN', 'ALBANIA', 'AUSTRALIA'], dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['EMPLOYER_COUNTRY'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "UNITED STATES OF AMERICA    583774\n",
       "CANADA                          23\n",
       "INDIA                            3\n",
       "GUATEMALA                        2\n",
       "AFGHANISTAN                      1\n",
       "ALBANIA                          1\n",
       "AUSTRALIA                        1\n",
       "TURKEY                           1\n",
       "Name: EMPLOYER_COUNTRY, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['EMPLOYER_COUNTRY'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping all countries observation accept US\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'CANADA'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'INDIA'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'GUATEMALA'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'AFGHANISTAN'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'ALBANIA'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'AUSTRALIA'].index, inplace = True)\n",
    "dataset.drop(dataset[dataset['EMPLOYER_COUNTRY'] == 'TURKEY'].index, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['UNITED STATES OF AMERICA'], dtype=object)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['EMPLOYER_COUNTRY'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['FANTUAN GROUP INC', 'TPUSA-FHCS', 'UNIVERSITY OF TEXAS AT DALLAS',\n",
       "       ..., 'EVEREST CONSULTANTS, INC.',\n",
       "       'EMBRAER EXECUTIVE AIRCRAFT, INC.',\n",
       "       'PORT LOGISTICS TERMINAL OPERATIONS, LLC'], dtype=object)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['EMPLOYER_NAME'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Y', 'N', nan], dtype=object)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['AGENT_REPRESENTING_EMPLOYER'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['ADVERSTING AND PROMOTIONS MANAGER',\n",
       "       'ADVERTISING AND PROMOTIONS DIRECTOR', 'PROGRAM MANAGER I', ...,\n",
       "       'INSPECTOR V', 'CONTAINER MOBILE HARBOR CRANE OPERATOR',\n",
       "       'DIGITAL TOUCHPOINTS ANALYST'], dtype=object)"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['JOB_TITLE'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['11-2011', '11-2021', '11-2022', '11-2031', '15-1132', '15-1133',\n",
       "       '17-2112', '27-1021', '29-1122', '11-3011', '11-3021', '11-3031',\n",
       "       '11-3051', '11-3061', '11-3071', '11-3111', '11-3121', '11-3131',\n",
       "       '11-9013', '11-9021', '11-9031', '11-9032', '11-9033', '11-9039',\n",
       "       '11-9041', '11-9051', '11-9081', '11-9111', '11-9121', '11-9141',\n",
       "       '11-9151', '11-9161', '11-9199', '11-1011', '11-1021',\n",
       "       '11-3031.02', '11-3051.01', '11-3071.03', '11-9199.02',\n",
       "       '11-9199.07', '13-1011', '13-1021', '13-1022', '13-1023',\n",
       "       '13-1031', '13-1041', '13-1041.07', '13-1051', '13-1071',\n",
       "       '13-1075', '13-1081', '13-1081.00', '13-1111', '13-1111.00',\n",
       "       '13-1121', '13-1131', '13-1141', '13-1151', '13-1161',\n",
       "       '13-1161.00', '13-1199', '13-2011', '13-2021', '13-2031',\n",
       "       '13-2041', '13-2051', '13-2052', '13-2053', '13-2061', '13-2071',\n",
       "       '13-2072', '13-2081', '13-2082', '13-2099', '13-2099.01',\n",
       "       '13-2099.02', '15-1021.00', '15-1022', '15-1023', '15-1034',\n",
       "       '15-1035', '15-1036', '15-1037', '15-1051.00', '15-1052',\n",
       "       '15-1053', '15-1054', '15-1055', '15-1099', '15-1109', '15-1111',\n",
       "       '15-1111.00', '15-1121', '15-1122', '15-1131', '15-1133.00',\n",
       "       '15-1134', '15-1141', '15-1141.00', '15-1142', '15-1143',\n",
       "       '15-1150', '15-1151', '15-1152', '15-1199', '15-1199.00',\n",
       "       '15-1199.01', '15-1199.02', '15-1199.06', '15-1199.08',\n",
       "       '15-1199.09', '15-2011', '15-2021', '15-2021.00', '15-2031',\n",
       "       '15-2041', '15-2041.00', '15-2041.01', '15-2091', '15-2099',\n",
       "       '15-3021', '17-1011', '17-1011.00', '17-1012', '17-1021',\n",
       "       '17-1022', '17-2011', '17-2021', '17-2031', '17-2041', '17-2051',\n",
       "       '17-2051.00', '17-2052', '17-2053', '17-2061', '17-2062',\n",
       "       '17-2063', '17-2071', '17-2071.00', '17-2072', '17-2073',\n",
       "       '17-2074', '17-2075', '17-2076', '17-2081', '17-2111',\n",
       "       '17-2112.00', '17-2121', '17-2131', '17-2141', '17-2141.00',\n",
       "       '17-2143', '17-2144', '17-2151', '17-2161', '17-2171', '17-2199',\n",
       "       '17-2199.02', '17-3011', '17-3011.00', '17-3012', '17-3013',\n",
       "       '17-3019', '17-3021', '17-3022', '17-3023', '17-3025', '17-3026',\n",
       "       '17-3027', '17-3029', '17-3031', '19-1011', '19-1012',\n",
       "       '19-1012.00', '19-1013', '19-1021', '19-1022', '19-1023',\n",
       "       '19-1029', '19-1029.01', '19-1031', '19-1032', '19-1041',\n",
       "       '19-1042', '19-1099', '19-2011', '19-2012', '19-2021', '19-2031',\n",
       "       '19-2032', '19-2041', '19-2042', '19-2043', '19-2099', '19-3011',\n",
       "       '19-3011.00', '19-3022', '19-3031', '19-3032', '19-3039',\n",
       "       '19-3041', '19-3051', '19-3091', '19-3092', '19-3093', '19-3094',\n",
       "       '19-3099', '19-3111', '19-4011', '19-4021', '19-4031', '19-4041',\n",
       "       '19-4051', '19-4061', '19-4091', '19-4092', '19-4099', '21-1011',\n",
       "       '21-1012', '21-1013', '21-1014', '21-1015', '21-1019', '21-1021',\n",
       "       '21-1022', '21-1023', '21-1029', '21-1091', '21-1093', '21-1094',\n",
       "       '21-1099', '21-2011', '21-2021', '21-2099', '23-1011', '23-1012',\n",
       "       '23-1022', '23-2011', '23-2099', '25-1011', '25-1021', '25-1022',\n",
       "       '25-1031', '25-1032', '25-1041', '25-1042', '25-1043', '25-1051',\n",
       "       '25-1052', '25-1053', '25-1054', '25-1061', '25-1062', '25-1063',\n",
       "       '25-1064', '25-1065', '25-1066', '25-1067', '25-1069', '25-1071',\n",
       "       '25-1072', '25-1081', '25-1082', '25-1111', '25-1112', '25-1113',\n",
       "       '25-1121', '25-1122', '25-1123', '25-1124', '25-1125', '25-1126',\n",
       "       '25-1191', '25-1192', '25-1193', '25-1194', '25-1199', '25-2011',\n",
       "       '25-2012', '25-2021', '25-2021.00', '25-2022', '25-2023',\n",
       "       '25-2031', '25-2032', '25-2041', '25-2051', '25-2052', '25-2053',\n",
       "       '25-2054', '25-2059', '25-3011', '25-3021', '25-3098', '25-3099',\n",
       "       '25-4011', '25-4012', '25-4013', '25-4021', '25-9011', '25-9021',\n",
       "       '25-9031', '25-9041', '25-9099', '27-1011', '27-1012', '27-1013',\n",
       "       '27-1014', '27-1014.00', '27-1019', '27-1022', '27-1023',\n",
       "       '27-1024', '27-1025', '27-1027', '27-1029', '27-2012', '27-2021',\n",
       "       '27-2022', '27-2032', '27-2041', '27-2042', '27-3011', '27-3021',\n",
       "       '27-3022', '27-3031', '27-3041', '27-3042', '27-3043', '27-3091',\n",
       "       '27-3099', '27-4012', '27-4014', '27-4021', '27-4032', '29-1011',\n",
       "       '29-1021', '29-1021.00', '29-1022', '29-1023', '29-1024',\n",
       "       '29-1029', '29-1031', '29-1041', '29-1051', '29-1061', '29-1062',\n",
       "       '29-1063', '29-1064', '29-1065', '29-1066', '29-1067', '29-1068',\n",
       "       '29-1069', '29-1069.99', '29-1071', '29-1081', '29-1111',\n",
       "       '29-1123', '29-1123.00', '29-1125', '29-1126', '29-1127',\n",
       "       '29-1128', '29-1129', '29-1131', '29-1141', '29-1151', '29-1171',\n",
       "       '29-1181', '29-1199', '29-2011', '29-2011.00', '29-2012',\n",
       "       '29-2041', '29-2052', '29-2053', '29-2056', '29-2071', '29-2081',\n",
       "       '29-2091', '29-2099', '29-9011', '29-9091', '29-9092', '29-9099',\n",
       "       '31-1011', '31-2021', '31-9091', '31-9092', '31-9096', '31-9099',\n",
       "       '33-3021', '33-9021', '35-1011', '35-1012', '35-2014', '37-2012',\n",
       "       '37-3011', '39-1021', '39-5092', '39-7011', '39-7012', '39-9011',\n",
       "       '39-9021', '39-9031', '39-9032', '39-9041', '41-1012', '41-2031',\n",
       "       '41-3011', '41-3021', '41-3031', '41-3031.03', '41-3099',\n",
       "       '41-4011', '41-4012', '41-9011', '41-9012', '41-9021', '41-9031',\n",
       "       '41-9099', '43-1011', '43-3021', '43-3031', '43-3051', '43-3061',\n",
       "       '43-3099', '43-4011', '43-4051', '43-4131', '43-4161', '43-4171',\n",
       "       '43-5011', '43-5061', '43-6011', '43-6012', '43-6013', '43-6014',\n",
       "       '43-9011', '43-9021', '43-9031', '43-9051', '43-9061', '43-9081',\n",
       "       '43-9111', '43-9199', '45-1011', '45-2011', '45-2021', '45-2092',\n",
       "       '47-1011', '47-2011', '47-2031', '47-2042', '47-2044', '47-2051',\n",
       "       '47-2061', '47-2073', '47-2111', '47-2152', '47-3013', '47-3019',\n",
       "       '47-4011', '47-4099', '49-1011', '49-2022', '49-2093', '49-2094',\n",
       "       '49-2098', '49-3011', '49-3023', '49-3031', '49-9062', '49-9063',\n",
       "       '49-9071', '49-9098', '51-1011', '51-2041', '51-3011', '51-3092',\n",
       "       '51-3093', '51-4012', '51-4071', '51-4121', '51-5112', '51-7041',\n",
       "       '51-7042', '51-8091', '51-9012', '51-9061', '51-9071', '51-9081',\n",
       "       '51-9199', '53-2011', '53-2012', '53-2022', '53-3032', '53-6041',\n",
       "       '53-6051', '53-7021', 'OPERATIONS RESEARCH ANALYSTS', nan],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['SOC_CODE'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(583774, 260)"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {
    "id": "VP9p4npdByNW"
   },
   "outputs": [],
   "source": [
    "#creating new dataset with selected features\n",
    "dt2 = dataset[['CASE_STATUS','AGENT_REPRESENTING_EMPLOYER', 'VISA_CLASS', 'JOB_TITLE', 'FULL_TIME_POSITION', 'H-1B_DEPENDENT', 'EMPLOYER_NAME', 'SECONDARY_ENTITY_1', 'SOC_TITLE', 'SOC_CODE', 'NAICS_CODE', 'NEW_EMPLOYMENT','CONTINUED_EMPLOYMENT', 'CHANGE_PREVIOUS_EMPLOYMENT', 'NEW_CONCURRENT_EMPLOYMENT', 'CHANGE_EMPLOYER', 'AMENDED_PETITION', 'WILLFUL_VIOLATOR', 'WAGE_RATE_OF_PAY_FROM_1','WAGE_RATE_OF_PAY_TO_1', 'WAGE_UNIT_OF_PAY_1','TOTAL_WORKER_POSITIONS','PREVAILING_WAGE_1']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>WILLFUL_VIOLATOR</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ADVERSTING AND PROMOTIONS MANAGER</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>FANTUAN GROUP INC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>33.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hour</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS DIRECTOR</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>TPUSA-FHCS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>99000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS  \\\n",
       "24   CERTIFIED                           Y       H-1B   \n",
       "26   CERTIFIED                           Y       H-1B   \n",
       "\n",
       "                              JOB_TITLE FULL_TIME_POSITION H-1B_DEPENDENT  \\\n",
       "24    ADVERSTING AND PROMOTIONS MANAGER                  N              N   \n",
       "26  ADVERTISING AND PROMOTIONS DIRECTOR                  Y              N   \n",
       "\n",
       "        EMPLOYER_NAME SECONDARY_ENTITY_1                            SOC_TITLE  \\\n",
       "24  FANTUAN GROUP INC                NaN  ADVERTISING AND PROMOTIONS MANAGERS   \n",
       "26         TPUSA-FHCS                NaN  ADVERTISING AND PROMOTIONS MANAGERS   \n",
       "\n",
       "   SOC_CODE  ...  CHANGE_PREVIOUS_EMPLOYMENT NEW_CONCURRENT_EMPLOYMENT  \\\n",
       "24  11-2011  ...                           0                       0.0   \n",
       "26  11-2011  ...                           0                       0.0   \n",
       "\n",
       "   CHANGE_EMPLOYER  AMENDED_PETITION  WILLFUL_VIOLATOR  \\\n",
       "24               0                 0                 N   \n",
       "26               1                 0                 N   \n",
       "\n",
       "    WAGE_RATE_OF_PAY_FROM_1  WAGE_RATE_OF_PAY_TO_1 WAGE_UNIT_OF_PAY_1  \\\n",
       "24                     33.0                    NaN               Hour   \n",
       "26                  99000.0                    NaN               Year   \n",
       "\n",
       "    TOTAL_WORKER_POSITIONS  PREVAILING_WAGE_1  \n",
       "24                     1.0                NaN  \n",
       "26                     1.0                NaN  \n",
       "\n",
       "[2 rows x 23 columns]"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt2.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(583774, 23)"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 333
    },
    "id": "j7bjJuzvByDs",
    "outputId": "b70a7743-5fa0-4738-8f6f-c0e7f0f731c3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.031092</td>\n",
       "      <td>-0.039871</td>\n",
       "      <td>-0.099762</td>\n",
       "      <td>-0.120590</td>\n",
       "      <td>-0.011274</td>\n",
       "      <td>-0.098721</td>\n",
       "      <td>-0.107934</td>\n",
       "      <td>-0.033778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <td>-0.031092</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.302504</td>\n",
       "      <td>0.412831</td>\n",
       "      <td>0.519099</td>\n",
       "      <td>0.016787</td>\n",
       "      <td>0.065069</td>\n",
       "      <td>0.503116</td>\n",
       "      <td>0.036325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <td>-0.039871</td>\n",
       "      <td>0.302504</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.236785</td>\n",
       "      <td>0.296907</td>\n",
       "      <td>-0.042419</td>\n",
       "      <td>-0.055373</td>\n",
       "      <td>0.376680</td>\n",
       "      <td>-0.048329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <td>-0.099762</td>\n",
       "      <td>0.412831</td>\n",
       "      <td>0.236785</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.524298</td>\n",
       "      <td>0.072389</td>\n",
       "      <td>0.117489</td>\n",
       "      <td>0.571710</td>\n",
       "      <td>0.096678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <td>-0.120590</td>\n",
       "      <td>0.519099</td>\n",
       "      <td>0.296907</td>\n",
       "      <td>0.524298</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.020823</td>\n",
       "      <td>0.082926</td>\n",
       "      <td>0.599888</td>\n",
       "      <td>0.048937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <td>-0.011274</td>\n",
       "      <td>0.016787</td>\n",
       "      <td>-0.042419</td>\n",
       "      <td>0.072389</td>\n",
       "      <td>0.020823</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.883984</td>\n",
       "      <td>0.011307</td>\n",
       "      <td>0.873799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <td>-0.098721</td>\n",
       "      <td>0.065069</td>\n",
       "      <td>-0.055373</td>\n",
       "      <td>0.117489</td>\n",
       "      <td>0.082926</td>\n",
       "      <td>0.883984</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.080552</td>\n",
       "      <td>0.820407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <td>-0.107934</td>\n",
       "      <td>0.503116</td>\n",
       "      <td>0.376680</td>\n",
       "      <td>0.571710</td>\n",
       "      <td>0.599888</td>\n",
       "      <td>0.011307</td>\n",
       "      <td>0.080552</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.043798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <td>-0.033778</td>\n",
       "      <td>0.036325</td>\n",
       "      <td>-0.048329</td>\n",
       "      <td>0.096678</td>\n",
       "      <td>0.048937</td>\n",
       "      <td>0.873799</td>\n",
       "      <td>0.820407</td>\n",
       "      <td>0.043798</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            NAICS_CODE  CHANGE_PREVIOUS_EMPLOYMENT  \\\n",
       "NAICS_CODE                    1.000000                   -0.031092   \n",
       "CHANGE_PREVIOUS_EMPLOYMENT   -0.031092                    1.000000   \n",
       "NEW_CONCURRENT_EMPLOYMENT    -0.039871                    0.302504   \n",
       "CHANGE_EMPLOYER              -0.099762                    0.412831   \n",
       "AMENDED_PETITION             -0.120590                    0.519099   \n",
       "WAGE_RATE_OF_PAY_FROM_1      -0.011274                    0.016787   \n",
       "WAGE_RATE_OF_PAY_TO_1        -0.098721                    0.065069   \n",
       "TOTAL_WORKER_POSITIONS       -0.107934                    0.503116   \n",
       "PREVAILING_WAGE_1            -0.033778                    0.036325   \n",
       "\n",
       "                            NEW_CONCURRENT_EMPLOYMENT  CHANGE_EMPLOYER  \\\n",
       "NAICS_CODE                                  -0.039871        -0.099762   \n",
       "CHANGE_PREVIOUS_EMPLOYMENT                   0.302504         0.412831   \n",
       "NEW_CONCURRENT_EMPLOYMENT                    1.000000         0.236785   \n",
       "CHANGE_EMPLOYER                              0.236785         1.000000   \n",
       "AMENDED_PETITION                             0.296907         0.524298   \n",
       "WAGE_RATE_OF_PAY_FROM_1                     -0.042419         0.072389   \n",
       "WAGE_RATE_OF_PAY_TO_1                       -0.055373         0.117489   \n",
       "TOTAL_WORKER_POSITIONS                       0.376680         0.571710   \n",
       "PREVAILING_WAGE_1                           -0.048329         0.096678   \n",
       "\n",
       "                            AMENDED_PETITION  WAGE_RATE_OF_PAY_FROM_1  \\\n",
       "NAICS_CODE                         -0.120590                -0.011274   \n",
       "CHANGE_PREVIOUS_EMPLOYMENT          0.519099                 0.016787   \n",
       "NEW_CONCURRENT_EMPLOYMENT           0.296907                -0.042419   \n",
       "CHANGE_EMPLOYER                     0.524298                 0.072389   \n",
       "AMENDED_PETITION                    1.000000                 0.020823   \n",
       "WAGE_RATE_OF_PAY_FROM_1             0.020823                 1.000000   \n",
       "WAGE_RATE_OF_PAY_TO_1               0.082926                 0.883984   \n",
       "TOTAL_WORKER_POSITIONS              0.599888                 0.011307   \n",
       "PREVAILING_WAGE_1                   0.048937                 0.873799   \n",
       "\n",
       "                            WAGE_RATE_OF_PAY_TO_1  TOTAL_WORKER_POSITIONS  \\\n",
       "NAICS_CODE                              -0.098721               -0.107934   \n",
       "CHANGE_PREVIOUS_EMPLOYMENT               0.065069                0.503116   \n",
       "NEW_CONCURRENT_EMPLOYMENT               -0.055373                0.376680   \n",
       "CHANGE_EMPLOYER                          0.117489                0.571710   \n",
       "AMENDED_PETITION                         0.082926                0.599888   \n",
       "WAGE_RATE_OF_PAY_FROM_1                  0.883984                0.011307   \n",
       "WAGE_RATE_OF_PAY_TO_1                    1.000000                0.080552   \n",
       "TOTAL_WORKER_POSITIONS                   0.080552                1.000000   \n",
       "PREVAILING_WAGE_1                        0.820407                0.043798   \n",
       "\n",
       "                            PREVAILING_WAGE_1  \n",
       "NAICS_CODE                          -0.033778  \n",
       "CHANGE_PREVIOUS_EMPLOYMENT           0.036325  \n",
       "NEW_CONCURRENT_EMPLOYMENT           -0.048329  \n",
       "CHANGE_EMPLOYER                      0.096678  \n",
       "AMENDED_PETITION                     0.048937  \n",
       "WAGE_RATE_OF_PAY_FROM_1              0.873799  \n",
       "WAGE_RATE_OF_PAY_TO_1                0.820407  \n",
       "TOTAL_WORKER_POSITIONS               0.043798  \n",
       "PREVAILING_WAGE_1                    1.000000  "
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt2.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 583774 entries, 24 to 664615\n",
      "Data columns (total 23 columns):\n",
      " #   Column                       Non-Null Count   Dtype  \n",
      "---  ------                       --------------   -----  \n",
      " 0   CASE_STATUS                  583774 non-null  object \n",
      " 1   AGENT_REPRESENTING_EMPLOYER  583769 non-null  object \n",
      " 2   VISA_CLASS                   583774 non-null  object \n",
      " 3   JOB_TITLE                    583774 non-null  object \n",
      " 4   FULL_TIME_POSITION           583774 non-null  object \n",
      " 5   H-1B_DEPENDENT               583754 non-null  object \n",
      " 6   EMPLOYER_NAME                583770 non-null  object \n",
      " 7   SECONDARY_ENTITY_1           534017 non-null  object \n",
      " 8   SOC_TITLE                    583770 non-null  object \n",
      " 9   SOC_CODE                     583770 non-null  object \n",
      " 10  NAICS_CODE                   583773 non-null  float64\n",
      " 11  NEW_EMPLOYMENT               583774 non-null  object \n",
      " 12  CONTINUED_EMPLOYMENT         583774 non-null  object \n",
      " 13  CHANGE_PREVIOUS_EMPLOYMENT   583774 non-null  int64  \n",
      " 14  NEW_CONCURRENT_EMPLOYMENT    583773 non-null  float64\n",
      " 15  CHANGE_EMPLOYER              583774 non-null  int64  \n",
      " 16  AMENDED_PETITION             583774 non-null  int64  \n",
      " 17  WILLFUL_VIOLATOR             583754 non-null  object \n",
      " 18  WAGE_RATE_OF_PAY_FROM_1      583770 non-null  float64\n",
      " 19  WAGE_RATE_OF_PAY_TO_1        298392 non-null  float64\n",
      " 20  WAGE_UNIT_OF_PAY_1           583770 non-null  object \n",
      " 21  TOTAL_WORKER_POSITIONS       583773 non-null  float64\n",
      " 22  PREVAILING_WAGE_1            579096 non-null  float64\n",
      "dtypes: float64(6), int64(3), object(14)\n",
      "memory usage: 106.9+ MB\n"
     ]
    }
   ],
   "source": [
    "dt2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [],
   "source": [
    "#creating copy of newly formed dataset\n",
    "dt=dt2.copy(deep=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['CASE_STATUS',\n",
       " 'AGENT_REPRESENTING_EMPLOYER',\n",
       " 'VISA_CLASS',\n",
       " 'JOB_TITLE',\n",
       " 'FULL_TIME_POSITION',\n",
       " 'H-1B_DEPENDENT',\n",
       " 'EMPLOYER_NAME',\n",
       " 'SECONDARY_ENTITY_1',\n",
       " 'SOC_TITLE',\n",
       " 'SOC_CODE',\n",
       " 'NEW_EMPLOYMENT',\n",
       " 'CONTINUED_EMPLOYMENT',\n",
       " 'WILLFUL_VIOLATOR',\n",
       " 'WAGE_UNIT_OF_PAY_1']"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#categorical columns\n",
    "categorical_columns = dt.select_dtypes(exclude='number').columns.to_list()\n",
    "categorical_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['NAICS_CODE',\n",
       " 'CHANGE_PREVIOUS_EMPLOYMENT',\n",
       " 'NEW_CONCURRENT_EMPLOYMENT',\n",
       " 'CHANGE_EMPLOYER',\n",
       " 'AMENDED_PETITION',\n",
       " 'WAGE_RATE_OF_PAY_FROM_1',\n",
       " 'WAGE_RATE_OF_PAY_TO_1',\n",
       " 'TOTAL_WORKER_POSITIONS',\n",
       " 'PREVAILING_WAGE_1']"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#numerical columns\n",
    "numerical_columns = dt.select_dtypes(include='number').columns.to_list()\n",
    "numerical_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>583773.000000</td>\n",
       "      <td>583774.000000</td>\n",
       "      <td>583773.000000</td>\n",
       "      <td>583774.000000</td>\n",
       "      <td>583774.000000</td>\n",
       "      <td>5.837700e+05</td>\n",
       "      <td>2.983920e+05</td>\n",
       "      <td>583773.00000</td>\n",
       "      <td>579096.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>450698.719992</td>\n",
       "      <td>0.124817</td>\n",
       "      <td>0.014567</td>\n",
       "      <td>0.273578</td>\n",
       "      <td>0.237976</td>\n",
       "      <td>9.373856e+04</td>\n",
       "      <td>1.074479e+05</td>\n",
       "      <td>1.67165</td>\n",
       "      <td>84333.091448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>189637.468307</td>\n",
       "      <td>0.951379</td>\n",
       "      <td>0.300407</td>\n",
       "      <td>1.169986</td>\n",
       "      <td>0.939539</td>\n",
       "      <td>4.568342e+04</td>\n",
       "      <td>5.211537e+04</td>\n",
       "      <td>4.67763</td>\n",
       "      <td>35378.043800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>31.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.500000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>7.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>454111.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.381900e+04</td>\n",
       "      <td>8.130000e+04</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>69285.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>541511.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000e+04</td>\n",
       "      <td>1.000000e+05</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>84240.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>541512.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.133810e+05</td>\n",
       "      <td>1.300000e+05</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>102386.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>928120.000000</td>\n",
       "      <td>338.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>1.870000e+06</td>\n",
       "      <td>3.000000e+06</td>\n",
       "      <td>594.00000</td>\n",
       "      <td>849680.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          NAICS_CODE  CHANGE_PREVIOUS_EMPLOYMENT  NEW_CONCURRENT_EMPLOYMENT  \\\n",
       "count  583773.000000               583774.000000              583773.000000   \n",
       "mean   450698.719992                    0.124817                   0.014567   \n",
       "std    189637.468307                    0.951379                   0.300407   \n",
       "min        31.000000                    0.000000                   0.000000   \n",
       "25%    454111.000000                    0.000000                   0.000000   \n",
       "50%    541511.000000                    0.000000                   0.000000   \n",
       "75%    541512.000000                    0.000000                   0.000000   \n",
       "max    928120.000000                  338.000000                  99.000000   \n",
       "\n",
       "       CHANGE_EMPLOYER  AMENDED_PETITION  WAGE_RATE_OF_PAY_FROM_1  \\\n",
       "count    583774.000000     583774.000000             5.837700e+05   \n",
       "mean          0.273578          0.237976             9.373856e+04   \n",
       "std           1.169986          0.939539             4.568342e+04   \n",
       "min           0.000000          0.000000             7.500000e+00   \n",
       "25%           0.000000          0.000000             7.381900e+04   \n",
       "50%           0.000000          0.000000             9.000000e+04   \n",
       "75%           0.000000          0.000000             1.133810e+05   \n",
       "max          99.000000         99.000000             1.870000e+06   \n",
       "\n",
       "       WAGE_RATE_OF_PAY_TO_1  TOTAL_WORKER_POSITIONS  PREVAILING_WAGE_1  \n",
       "count           2.983920e+05            583773.00000      579096.000000  \n",
       "mean            1.074479e+05                 1.67165       84333.091448  \n",
       "std             5.211537e+04                 4.67763       35378.043800  \n",
       "min             0.000000e+00                 1.00000           7.250000  \n",
       "25%             8.130000e+04                 1.00000       69285.000000  \n",
       "50%             1.000000e+05                 1.00000       84240.000000  \n",
       "75%             1.300000e+05                 1.00000      102386.000000  \n",
       "max             3.000000e+06               594.00000      849680.000000  "
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_STATUS                         0\n",
       "AGENT_REPRESENTING_EMPLOYER         5\n",
       "VISA_CLASS                          0\n",
       "JOB_TITLE                           0\n",
       "FULL_TIME_POSITION                  0\n",
       "H-1B_DEPENDENT                     20\n",
       "EMPLOYER_NAME                       4\n",
       "SECONDARY_ENTITY_1              49757\n",
       "SOC_TITLE                           4\n",
       "SOC_CODE                            4\n",
       "NAICS_CODE                          1\n",
       "NEW_EMPLOYMENT                      0\n",
       "CONTINUED_EMPLOYMENT                0\n",
       "CHANGE_PREVIOUS_EMPLOYMENT          0\n",
       "NEW_CONCURRENT_EMPLOYMENT           1\n",
       "CHANGE_EMPLOYER                     0\n",
       "AMENDED_PETITION                    0\n",
       "WILLFUL_VIOLATOR                   20\n",
       "WAGE_RATE_OF_PAY_FROM_1             4\n",
       "WAGE_RATE_OF_PAY_TO_1          285382\n",
       "WAGE_UNIT_OF_PAY_1                  4\n",
       "TOTAL_WORKER_POSITIONS              1\n",
       "PREVAILING_WAGE_1                4678\n",
       "dtype: int64"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'H1B Petitions by Case Status'}>"
      ]
     },
     "execution_count": 219,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "#import ggplot\n",
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams[\"figure.figsize\"] = (10,5)\n",
    "dt['CASE_STATUS'].value_counts().plot(kind='barh',title='H1B Petitions by Case Status')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='WAGE_RATE_OF_PAY_FROM_1'>"
      ]
     },
     "execution_count": 225,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(dt['WAGE_RATE_OF_PAY_FROM_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='WAGE_RATE_OF_PAY_FROM_1'>"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAj8AAAE+CAYAAABiGHEPAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAAsTAAALEwEAmpwYAAAT7UlEQVR4nO3dfbBtZX0f8O8PbnmLUUCUIkSveI2NNtEobdCUjBqj6FCNGWm4tdVU09fMLZq2VmLSidOaRmtUQpqoY4y1tWpiUKOTljHGNqRGErAgKCCHgAm3GlFa1ICpwNM/1jqwOb0vnMs5dx/u7/OZ2XPXftbaaz3rWc/Z+3vXevZeNcYIAEAXhy27AgAAB5PwAwC0IvwAAK0IPwBAK8IPANCK8AMAtLJtPQufcMIJY/v27ZtUFQCAjXPZZZd9ZYzxsLXl6wo/27dvz6WXXrpxtQIA2CRV9YU9lbvsBQC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0Mq2ZVcAurvggguysrKy7GpsmN27dydJTj755CXX5IFhx44d2bVr17KrAa0IP7BkKysrufyqq3PnMccvuyob4vDbbk2SfOkvvL3sz+G33bLsKkBL3p1gC7jzmONz+1953rKrsSGOvua3k+SQ2Z/NtNpWwMFlzA8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK1sq/FxwwQW54IILll0NAGCTbIXP+m1L3foaKysry64CALCJtsJn/ZY68wMAsNmEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWtm27Aos2r17d26//face+65y64KHDQrKys57P+OZVeDJTjsm1/LysrXvefRysrKSo4++uil1mG/Z36q6h9U1aVVdenNN998MOoEALBp9nvmZ4zx9iRvT5LTTjttU/97evLJJydJzj///M3cDGwp5557bi774z9bdjVYgruOenB2nHqi9zxa2QpnOo35AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhl27IrsGjHjh3LrgIAsIm2wmf9lgo/u3btWnYVAIBNtBU+6132AgBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhl27IrACSH33ZLjr7mt5ddjQ1x+G1fTZJDZn820+G33ZLkxGVXA9oRfmDJduzYsewqbKjdu+9Ikpx8sg/1/TvxkDv+8EAg/MCS7dq1a9lVAGjFmB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoJUaY9z3hatuTvKFzavOup2Q5CvLrsQWoB0m2kEbrNIOE+0w0Q6Tju3wqDHGw9YWriv8bDVVdekY47Rl12PZtMNEO2iDVdphoh0m2mGiHe7hshcA0IrwAwC08kAPP29fdgW2CO0w0Q7aYJV2mGiHiXaYaIfZA3rMDwDAej3Qz/wAAKzL0sNPVX1HVX2iqj5XVZ+tqnPn8uOr6mNVdd3873FzeVXVL1bVSlV9pqqevLCul87LX1dVL10of0pVXTm/5herqg7+nu5fVR1eVf+zqj46P390VV0y1/v9VXXEXH7k/Hxlnr99YR3nzeXXVtVzFsrPnMtWqurVB33n1qGqjq2qD1TVNVV1dVU9tVt/qKpXzn8PV1XVe6vqqC79oareWVVfrqqrFso2/fjvbRvLsJc2+Hfz38RnquqDVXXswrx1HecD6UvLsKd2WJj3z6pqVNUJ8/NDsi/M9dljO1TVrrlPfLaq3rBQfkj2hw01xljqI8lJSZ48T397ks8neXySNyR59Vz+6iSvn6efl+S/JKkkpye5ZC4/Pskfz/8eN08fN8/7w3nZml/73GXv917a4ieT/OckH52f/3qSc+bptyb5x/P0P0ny1nn6nCTvn6cfn+SKJEcmeXSS65McPj+uT3JqkiPmZR6/7P3dRzv8hyQ/Pk8fkeTYTv0hyclJbkhy9EI/+LEu/SHJDyR5cpKrFso2/fjvbRtbqA2enWTbPP36hTZY93Feb1/aSu0wl39Hkosy/e7cCYdyX9hHf3hGkt9JcuT8/OGHen/Y0DZddgX2cJA/nOSHklyb5KS57KQk187Tb0uyc2H5a+f5O5O8baH8bXPZSUmuWSi/13Jb5ZHklCQfT/LMJB+d/xi/knve7J6a5KJ5+qIkT52nt83LVZLzkpy3sM6L5tfd/dq5/F7LbaVHkodk+uCvNeVt+kOm8POnmd6st8394Tmd+kOS7bn3G/2mH/+9bWOrtMGaeS9M8p49Hb/9HecDeW/Zau2Q5ANJnpjkxtwTfg7ZvrCndsgUWJ61h+UO6f6wUY+lX/ZaNJ9S+94klyQ5cYzxxXnWl5KcOE+vfjCsumku21f5TXso32rekuRVSe6anz80yf8ZY9wxP1+s9937Os+/dV5+vW2zFT06yc1Jfq2mS4DvqKpvS6P+MMbYneSNSf4kyRczHd/L0rM/rDoYx39v29iKXpbpTEWy/jY4kPeWLaOqXpBk9xjjijWzuvWF70xyxnw56r9X1V+by1v1hwO1ZcJPVT0oyW8mecUY42uL88YUOw/Zr6VV1VlJvjzGuGzZddkCtmU6vfsrY4zvTfLnmU47361BfzguyQsyBcFHJPm2JGcutVJbyME4/lu5j1XVa5LckeQ9y67LwVZVxyT5qST/6mBtcwv3hW2Zzg6fnuRfJPn11TFL7N+WCD9V9ZcyBZ/3jDEunIv/rKpOmueflOTLc/nuTNd7V50yl+2r/JQ9lG8l35/k+VV1Y5L3Zbr0dX6SY6tq27zMYr3v3td5/kOSfDXrb5ut6KYkN40xLpmffyBTGOrUH56V5IYxxs1jjG8luTBTH+nYH1YdjOO/t21sGVX1Y0nOSvLi+UM5WX8bfDXr70tbxWMy/afgivn98pQkn66qv5xmfSHTe+WFY/KHma4anJBe/eGALT38zEn1V5NcPcZ408Ks30ry0nn6pZnGAq2Wv2Qe2X96klvn05MXJXl2VR03/8/52ZmuW34xydeq6vR5Wy9ZWNeWMMY4b4xxyhhje6ZBZb87xnhxkk8kedG82No2WG2bF83Lj7n8nHmE/qOTPDbTgL4/SvLYeUT/EfM2fusg7Nq6jTG+lORPq+pxc9EPJvlcGvWHTJe7Tq+qY+Y6rrZBu/6w4GAc/71tY0uoqjMzXRp//hjjtoVZ6zrOc99Yb1/aEsYYV44xHj7G2D6/X96U6QszX0qjvjD7UKZBz6mq78w0iPkradQf7pdlDzpK8jcynVL8TJLL58fzMl1X/HiS6zKNaD9+Xr6S/PtMo9avTHLawrpelmRlfvy9hfLTklw1v+aXsoUHbCV5eu75ttepmTrtSpLfyD2j+o+an6/M809deP1r5v28NgvfYprb9PPzvNcsez/30wZPSnLp3Cc+lOkbGq36Q5LXJrlmrud/zPTNjRb9Icl7M411+lamD7eXH4zjv7dtbKE2WMk0/uLy+fHWAz3OB9KXtko7rJl/Y+4Z8HxI9oV99Icjkvynuf6fTvLMQ70/bOTDLzwDAK0s/bIXAMDBJPwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD+wyarqzVX1ioXnF1XVOxae/0JV/WRVbauqm6vq59e8/kFV9StVdX1VfbqqLquqvz/P215Vt1fV5QuPl+yjLjdW1ZVV9Zma7gf0qDXzP1RVn5qnn7Owzm9U1bXz9Lur6ulVdeua7T5rH9s9pao+XFXXzftx/vxDa9nDun5nH+v52araPS93VVU9f2HeK6rqm1X1kPmH7n6/qp67MP/sqvqv+1j3nWv2Z/uaul1TVW9c85ofntvy6rldf3hh3ruq6raq+vaFsrdU1aiqE/ZRj3dW1Zer6qq9LQPcP8IPbL7/keRpSVJVh2X6CfonLMx/WpJPJvmhTD9Advb8i7Or3pHkfyd57BjjyZnu83X8wvzrxxhPWni8ez/1ecYY43uS/LckP71aWFXHJnlKkodU1aljjItW15npRydfPD9fDVcXr9nuHkPLvC8XJvnQGOOxmW7I+KAkr1tYbHFdew1RszfPdTo7yTvnNk2mu3L/UZIfGdMPmP2jJG+qqqNqunfgzyX5iX2s9/Y1+3PjYt0y3XT5rKr6/nm/npjpBrQvGGN8V5LnJ3ljVX3PwjpXMt2nbfXYPzP7v5XIu+JebrCphB/YfJ9M8tR5+gmZfpH16/PP7R+Z5Lsy/ULrzkz3dPuT1eWr6jFJ/nqSnx5j3JUkY7rn1+s3oF5/kHvfzf1Hknwk0/3lztmA9a96ZpJvjjF+LUnGGHcmeWWSl9V0o8oDMsa4OtMNPk+Y2+lBmcLcznn+VZn2519muhHmu8cY19+P7d2e6ZeVV9vsnyf5uTHGDfP8G5L820w3mVz1viQ/Ok8/PVMQviP7MMb4vSS3HGg9gf0TfmCTjTH+V5I7quqRmc7y/EGSSzIFnNMy/RT/YZluaPqRTD9lv3N++ROSXLEafPbiMWsu15xxH6t2Zqbbh6zaOW97cfv7csaa7T5mL8s9IclliwVjjK9lCnk79rCu19yXylfV92W6mePNmcLa+5JcnORxVXXivNhrk/ztJM9N8ob9rPLohTp8cA/bOy7TfZJ+b2/7lekM2eJZvc8nedj82p1zHYEl27b/RYAN8MlMwedpSd6U6ezB05LcmulswFlJPjHGuL2qfjPJz9TCOKFVczA4O8nDxxiPmIuvny/L3FefqKrjk3wjyc/M6z0x0wf7748xRlV9q6r+6nz2ZG8uHmOctY7t7st61vXKqvo7Sb6e5Efn+u5M8sIxxl1z+52d5JfGGH9eVe9P8o0xxl/sZ72376Udz6iqKzK1z1vGdBPN9bgwUzj7viT/cJ2vBTaBMz9wcKyO+/nuTJe9PpXpzM/qeJ+dSZ5VVTdmOpvw0EyXiz6X5Imr41rGGK+bP6AffD/q8owkj8p0Cee1c9nfynQD2RvmOmzPfTv7c198LtNYortV1YOTPDLTmJj1evM8JueMMcbFVfXdmYLJx+a6n5N71/2u+XGgLh5jPDHTGZ2XV9WT5vL/b7/m559dU/b+JP86ycf2cwYPOEiEHzg4Ppnp7M4tY4w7xxi3JDk2UwC6PMkZSR45xtg+xtieaWDuzjHGSqZLKf+mqg5Pkqo6KtMdrA/YGOOOJK9I8pL5LNDOJGcubP8p2bhxPx9PckzN30Kb9+MXkrxrjHHbBqx/Z5KfXa37fEbsEbXmm2z31zym5+czjSFKpsHO51XV9mT65l2Sn8q0b4uv+0Kmu2z/8kbWBzhwwg8cHFdm+pbXp9aU3ZrpTMzvrrks8+Ekf3MeEP3jmc4ErVTVpUk+luRVC8uuHfPzT+9LhcYYX8w0vucnMp0J+tTCvBuS3DqPq9mbtWN+XrSX7YwkL8z0LbbrMo2D+WamoLARzkmydozOB7Oxg7ZXvTXJD1TV9jHG5ZmC0Eeq6ppM47VeNZffyxjjbfd1sHVVvTfTuLDHVdVNVfXyDas9kCSp6X0JAKAHZ34AgFZ82wsOQVV1SZIj1xT/3THGlZu4zYdmGt+z1g+OMb66znWtfqtt0W+MMV63p+XXsd4Nq+OhUA/oymUvAKAVl70AgFaEHwCgFeEHAGhF+AEAWhF+AIBW/h/cl5vE1qZ8OQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def remove_outlier(col):\n",
    "    sorted(col)\n",
    "    Q1,Q3 = col.quantile([0.25,0.75])\n",
    "    IQR = Q3 - Q1\n",
    "    lr = Q1 - (1.5 * IQR)\n",
    "    ur = Q3 + (1.5 * IQR)\n",
    "    return lr, ur\n",
    "\n",
    "lessVis, moreVis = remove_outlier(dt['WAGE_RATE_OF_PAY_FROM_1'])\n",
    "dt['WAGE_RATE_OF_PAY_FROM_1'] = np.where(dt['WAGE_RATE_OF_PAY_FROM_1']>moreVis,moreVis,dt['WAGE_RATE_OF_PAY_FROM_1'])\n",
    "dt['WAGE_RATE_OF_PAY_FROM_1'] = np.where(dt['WAGE_RATE_OF_PAY_FROM_1']<lessVis,lessVis,dt['WAGE_RATE_OF_PAY_FROM_1'])\n",
    "\n",
    "sns.boxplot(dt['WAGE_RATE_OF_PAY_FROM_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='WAGE_RATE_OF_PAY_TO_1'>"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(dt['WAGE_RATE_OF_PAY_TO_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='WAGE_RATE_OF_PAY_TO_1'>"
      ]
     },
     "execution_count": 228,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAj8AAAE+CAYAAABiGHEPAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAAsTAAALEwEAmpwYAAATKUlEQVR4nO3df7Bmd10f8PcnuyUEMZAfNIOLZAlLbaG2CJkWGONUoRAyCgXBZqctWFqtrd0mOo6lRR3sVKfYASddOjKo1KZjJUXlR2dsMWpqg2nQhC4k8qO5gWjdhhATm4BJgCTf/nHOzTy53bs/773P3ft5vWae2fN8z3nO+X6/z9nzvO/5WWOMAAB0ccayKwAAsJWEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoJXdJzLx+eefP/bu3btJVQEA2Dg333zzH48xnra2/ITCz969e3PTTTdtXK0AADZJVf3Bkcod9gIAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhl97IrAN0dPHgwKysry67GSTl8+HCSZM+ePUuuyelr3759OXDgwLKrAa0IP7BkKysrOXTrp/LIk85ddlVO2K4H7kuSfP7LNiUnY9cD9y67CtCSLRZsA4886dw8+OcvW3Y1TthZn/61JDkt674drPYfsLWc8wMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQyrYKPwcPHszBgweXXQ0AYJNsh9/63Utd+horKyvLrgIAsIm2w2/9ttrzAwCw2YQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBa2b3sCiw6fPhwHnzwwVxxxRXLrgpsmZWVlZzxlbHsarAEZzx0f1ZWvmibRysrKys566yzllqHY+75qarvraqbquqmu+++eyvqBACwaY6552eM8e4k706Siy++eFP/PN2zZ0+S5KqrrtrMxcC2csUVV+Tmz9617GqwBI8+8ezsu+gC2zxa2Q57Op3zAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANDK7mVXYNG+ffuWXQUAYBNth9/6bRV+Dhw4sOwqAACbaDv81jvsBQC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANCK8AMAtCL8AACtCD8AQCvCDwDQivADALQi/AAArQg/AEArwg8A0IrwAwC0IvwAAK0IPwBAK8IPANDK7mVXAEh2PXBvzvr0ry27Gids1wP3JMlpWfftYNcD9ya5YNnVgHaEH1iyffv2LbsKJ+3w4YeTJHv2+AE/ORec1t8/nK6EH1iyAwcOLLsKAK045wcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaEX4AQBaEX4AgFaEHwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfgBAFoRfgCAVoQfAKAV4QcAaKXGGMc/cdXdSf7gCKPOT/LHG1Wp01D39if6INEH3duf6INEHyT6YDu1/8IxxtPWFp5Q+FlPVd00xrj4lGd0mure/kQfJPqge/sTfZDog0QfnA7td9gLAGhF+AEAWtmo8PPuDZrP6ap7+xN9kOiD7u1P9EGiDxJ9sO3bvyHn/AAAnC4c9gIAWjml8FNVl1bVZ6pqparevFGVWoaq+vqquq6qPllVv19VV8zlb62qw1V1aH5dtvCZfza3/TNV9YqF8iP2S1U9q6o+OpdfU1VP2NpWHltV3VFVt8xtvWkuO7eqrq2q2+Z/z5nLq6r+zdyeT1TVCxbm88Z5+tuq6o0L5S+c578yf7a2vpXrq6pvWPiuD1XV/VV15U5fD6rqPVX1haq6daFs07/39Zax1dZp/7+uqk/PbXx/VT11Lt9bVQ8urAvvWvjMCbXzaH251dbpg01f76vqzPn9yjx+7xY1+f+zTh9cs9D+O6rq0Fy+49aDWv93cOdtC8YYJ/VKsivJ7UkuSvKEJB9P8tyTnd+yX0menuQF8/DXJvlfSZ6b5K1JfugI0z93bvOZSZ4198Wuo/VLkv+U5PJ5+F1J/uGy232Edt2R5Pw1ZT+V5M3z8JuTvG0evizJf0lSSV6U5KNz+blJPjv/e848fM487nfnaWv+7CuX3eaj9MWuJJ9PcuFOXw+SfEuSFyS5dSu/9/WWsU3a//Iku+fhty20f+/idGvmc0LtXK8vt1EfbPp6n+QfJXnXPHx5kmu2Ux+sGf/2JD+2U9eDrP87uOO2Baey5+evJFkZY3x2jPGVJO9N8upTmN9SjTHuHGN8bB7+YpJPJdlzlI+8Osl7xxhfHmN8LslKpj45Yr/M6fbbkvzy/Pl/n+RvbEpjNt6rM9U3eXy9X53k6jG5MclTq+rpSV6R5Noxxr1jjD9Jcm2SS+dxZ48xbhzTGn51tncfvDTJ7WOMI93Yc9WOWA/GGP89yb1rirfie19vGVvqSO0fY/z6GOPh+e2NSZ5xtHmcZDvX68stt846sJ6NXO8X++aXk7x0dW/AVjtaH8x1+q4kv3S0eZzO68FRfgd33LbgVMLPniT/e+H9H+XoYeG0Me92/aYkH52L/vG8S+89C7vi1mv/euXnJfm/CxvT7dpfI8mvV9XNVfW9c9kFY4w75+HPJ7lgHj7RPtgzD68t364uz+M3dJ3Wg2Rrvvf1lrHdvCnTX6mrnlVV/7OqfruqLpnLTqadp8N2dLPX+8c+M4+/b55+u7kkyV1jjNsWynbserDmd3DHbQuc8LxGVT05ya8kuXKMcX+Sn0ny7CTPT3Jnpt2eO9k3jzFekOSVSb6/qr5lceSc1nf8JYLz+QivSvK+uajbevA4W/G9b9d1q6rekuThJL84F92Z5JljjG9K8oNJ/mNVnX2889uu7VxH6/V+jf15/B9DO3Y9OMLv4GN2yrbgVMLP4SRfv/D+GXPZaauq/kymL/wXxxi/miRjjLvGGI+MMR5N8rOZdusm67d/vfJ7Mu0S3L2mfFsZYxye//1Ckvdnau9dq7tg53+/ME9+on1wOI8/dLAt+2D2yiQfG2PclfRbD2Zb8b2vt4xtoaq+O8m3J/lb8wY586Gee+bhmzOd4/LncnLt3Nbb0S1a7x/7zDz+KfP028Zcr9cmuWa1bKeuB0f6HcwO3BacSvj5vSTPqekM/idkOkTwoY2p1tabj+f+fJJPjTHesVC+eNz1NUlWrwL4UJLLa7pS4VlJnpPpRK4j9su84bwuyevmz78xyQc3s00nqqq+pqq+dnU40wmft2Zq6+rZ+ov1/lCSN8xn/L8oyX3zbssPJ3l5VZ0z7yZ/eZIPz+Pur6oXzf39hmyzPljwuL/yOq0HC7bie19vGUtXVZcm+eEkrxpjPLBQ/rSq2jUPX5TpO//sSbZzvb7cFrZovV/sm9cl+a3VoLmNvCzJp8cYjx2y2YnrwXq/g9mJ24JxameGX5bpbPDbk7zlVOa17FeSb860m+0TSQ7Nr8uS/Ickt8zlH0ry9IXPvGVu+2eycNXSev2S6QqI3810cuD7kpy57Hav6YOLMl2d8fEkv79a90zH338zyW1JfiPJuXN5Jfm3cztvSXLxwrzeNLdzJcnfXSi/ONMG9PYk78x8o83t9EryNZn+8nzKQtmOXg8yBb07k3w103H4v7cV3/t6y9gm7V/JdN7C6vZg9Yqk75z/fxxK8rEk33Gy7TxaX26TPtj09T7JE+f3K/P4i7ZTH8zlv5Dk+9ZMu+PWg6z/O7jjtgXu8AwAtOKEZwCgFeEHAGhF+AEAWhF+AIBWhB8AoBXhBwBoRfiBJaqqn66qKxfef7iqfm7h/dur6gerandV3V1V/2rN559cVT9TVbdX1cdqeibb98zj9lbVg1V1aOH1hqPU5Y6quqWm5zj9dlVduGb8B6rqxnn4FQvz/FJVfWYevrqq/lpV3bdmuS87ynKfUVUfrKrb5nZcNd8gL0eY128cZT5vrarD83S3VtWrFsZdWVUPVdVT5huyfaSqXrkw/vVV9V+PMM/zFpb9+YX5H6qqJxyt7uvU8byqum7us3euNx2wuYQfWK7fSfKSJKmqM5Kcn+R5C+NfkuSGJH89043jXj/fGXXVzyX5kyTPGdMz2S5Ncu7C+NvHGM9feF19jPp86xjjLyX5b0l+ZLWwqp6a5IVJnlJVF40xPrw6zyQ3ZXr8w/PHGKvh6vo1yz1iaJnb8qtJPjDGeE6mxwM8OclPLEy2OK91Q9Tsp+c6vT7Je+Y+TaY7dv9ekteO6eZm35fkHVX1xJqeY/STSb5/7czGGPcstPNdq/Of33/1OOq+1kNJfjTJDx2jHcAmEn5guW5I8uJ5+HmZ7nz6xfm28Gcm+QuZ7h67P8lVSf5wdfqqenamZy39yJievZQxxt1jjLdtQL3+Rx7/VOnXJvnPSd6b6ZEFG+Xbkjw0xvh3STLGeCTJDyR5U1U96WRnOsb4VKaHkZ4/99OTM4W5/fP4WzO1558m+bEkV48xbt/suo8x/nSM8ZFMIQhYkt3HngTYLGOM/1NVD1fVMzPt5VkNHS9Ocl+mW8afkenZQv8gyVMz/YDfkCksfXw1+Kzj2VV1aOH9gTHG9cdRtUuTfGDh/f4k/yLJXZkeeviTx/j8JWuW+53rhIvnJbl5sWCMcX9V/WGSfUeY1/vGGEfbs5Ikqaq/muTRJHcn+Z5Moe36JN9QVReM6YG1P54pWH4l0y33T9Sx6v6Jk5gnsAWEH1i+GzIFn5ckeUem8POSTOHndzI9Vfy6McaDVfUrSX508TyhVVX1lkyHe/7sGOPr5uLb50M0x+u6qjo3yZcyHZ5JVV2Q6aGNHxljjKr6alX9xXnvyXquH2N8+wks92hOZF4/UFV/O8kXk/zNub77k7xmjPHo3H+vT/LOMcafVtU1Sb40xvjyBtUVOA047AXLt3rezzdmOux1Y6Y9P6vn++xP8rKquiPTnobzMh1y+WSSv7x6XssY4yfmoHP2KdTlW5NcmOmBhj8+l31XknOSfG6uw965Thvhk5nOJXpMVZ2d5JmZHoh4olbPyblkjHF9VX1jpuB27Vz3y/P4uj86v07GRtcd2CLCDyzfDZn27tw7xnhkjHFvpsNbL84UQi5J8swxxt4xxt5MJ+buH2OsZDrZ+F9W1a4kqaonZnrS8kkbYzyc5Mokb5j3Au1PcunC8l+YjTvv5zeTPGn1KrS5HW9P8gtjjAc2YP77k7x1te7zHrGvW3sl20na7LoDm0T4geW7JdNVXjeuKbsv056Y31pzWOaDSb5jPiH672faE7RSVTcluTbJDy9M++w1l5z/k+Op0BjjziS/lCloXbhYtzHG55LcN59Xs55L1iz3dessZyR5Taar2G7LdEXbQ0n++fHU8zhcnuT9a8renw0Ibydb93kP1DuSfHdV/VFVPfdU6wKcmJr+/wIA9GDPDwDQiqu9oJmq+miSM9cU/50xxi2buMzzMp0js9ZLxxj3nOC8Vq9qW3Rcl8AfY74bWcdXJFl7v6XPjTFec7L1AzaOw14AQCsOewEArQg/AEArwg8A0IrwAwC0IvwAAK38P1y2o3M6+FUPAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lessVis, moreVis = remove_outlier(dt['WAGE_RATE_OF_PAY_TO_1'])\n",
    "dt['WAGE_RATE_OF_PAY_TO_1'] = np.where(dt['WAGE_RATE_OF_PAY_TO_1']>moreVis,moreVis,dt['WAGE_RATE_OF_PAY_TO_1'])\n",
    "dt['WAGE_RATE_OF_PAY_TO_1'] = np.where(dt['WAGE_RATE_OF_PAY_TO_1']<lessVis,lessVis,dt['WAGE_RATE_OF_PAY_TO_1'])\n",
    "\n",
    "sns.boxplot(dt['WAGE_RATE_OF_PAY_TO_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='PREVAILING_WAGE_1'>"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(dt['PREVAILING_WAGE_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Mayurdhvajsinh\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='PREVAILING_WAGE_1'>"
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lessVis, moreVis = remove_outlier(dt['PREVAILING_WAGE_1'])\n",
    "dt['PREVAILING_WAGE_1'] = np.where(dt['PREVAILING_WAGE_1']>moreVis,moreVis,dt['PREVAILING_WAGE_1'])\n",
    "dt['PREVAILING_WAGE_1'] = np.where(dt['PREVAILING_WAGE_1']<lessVis,lessVis,dt['PREVAILING_WAGE_1'])\n",
    "\n",
    "sns.boxplot(dt['PREVAILING_WAGE_1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x720 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's check if there is any trend in missing data\n",
    "mno.bar(dt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping the enteries with missing values\n",
    "dt.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(287351, 23)"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_STATUS                    0\n",
       "AGENT_REPRESENTING_EMPLOYER    0\n",
       "VISA_CLASS                     0\n",
       "JOB_TITLE                      0\n",
       "FULL_TIME_POSITION             0\n",
       "H-1B_DEPENDENT                 0\n",
       "EMPLOYER_NAME                  0\n",
       "SECONDARY_ENTITY_1             0\n",
       "SOC_TITLE                      0\n",
       "SOC_CODE                       0\n",
       "NAICS_CODE                     0\n",
       "NEW_EMPLOYMENT                 0\n",
       "CONTINUED_EMPLOYMENT           0\n",
       "CHANGE_PREVIOUS_EMPLOYMENT     0\n",
       "NEW_CONCURRENT_EMPLOYMENT      0\n",
       "CHANGE_EMPLOYER                0\n",
       "AMENDED_PETITION               0\n",
       "WILLFUL_VIOLATOR               0\n",
       "WAGE_RATE_OF_PAY_FROM_1        0\n",
       "WAGE_RATE_OF_PAY_TO_1          0\n",
       "WAGE_UNIT_OF_PAY_1             0\n",
       "TOTAL_WORKER_POSITIONS         0\n",
       "PREVAILING_WAGE_1              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_STATUS                     object\n",
       "AGENT_REPRESENTING_EMPLOYER     object\n",
       "VISA_CLASS                      object\n",
       "JOB_TITLE                       object\n",
       "FULL_TIME_POSITION              object\n",
       "H-1B_DEPENDENT                  object\n",
       "EMPLOYER_NAME                   object\n",
       "SECONDARY_ENTITY_1              object\n",
       "SOC_TITLE                       object\n",
       "SOC_CODE                        object\n",
       "NAICS_CODE                     float64\n",
       "NEW_EMPLOYMENT                  object\n",
       "CONTINUED_EMPLOYMENT            object\n",
       "CHANGE_PREVIOUS_EMPLOYMENT       int64\n",
       "NEW_CONCURRENT_EMPLOYMENT      float64\n",
       "CHANGE_EMPLOYER                  int64\n",
       "AMENDED_PETITION                 int64\n",
       "WILLFUL_VIOLATOR                object\n",
       "WAGE_RATE_OF_PAY_FROM_1        float64\n",
       "WAGE_RATE_OF_PAY_TO_1          float64\n",
       "WAGE_UNIT_OF_PAY_1              object\n",
       "TOTAL_WORKER_POSITIONS         float64\n",
       "PREVAILING_WAGE_1              float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Performing Binary Encoding \n",
    "AGENT_REPRESENTING_EMPLOYER,FULL_TIME_POSITION,H-1B_DEPENDENT,SECONDARY_ENTITY_1,WILLFUL_VIOLATOR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>WILLFUL_VIOLATOR</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_0</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>638954</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>GRAPHIC DESIGNER</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>LOS ANGELES SA RANG COMMUNITY CHURCH</td>\n",
       "      <td>N</td>\n",
       "      <td>GRAPHIC DESIGNERS</td>\n",
       "      <td>27-1024</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>34382.0</td>\n",
       "      <td>34800.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>34382.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173865</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>DEVELOPER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>TATA CONSULTANCY SERVICES LIMITED</td>\n",
       "      <td>Y</td>\n",
       "      <td>COMPUTER PROGRAMMERS</td>\n",
       "      <td>15-1131</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>85883.0</td>\n",
       "      <td>97000.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>85883.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268274</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SOFTWARE ENGINEER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>C3 IOT, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>110000.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>94557.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>511564</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ANALYST-TESTING</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>TATA CONSULTANCY SERVICES LIMITED</td>\n",
       "      <td>Y</td>\n",
       "      <td>COMPUTER OCCUPATIONS, ALL OTHER</td>\n",
       "      <td>15-1199</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>67725.0</td>\n",
       "      <td>97800.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>67725.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280523</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SOFTWARE ENGINEER</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>RYZLINK CORP.</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>109242.0</td>\n",
       "      <td>109242.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>109242.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS          JOB_TITLE  \\\n",
       "638954   CERTIFIED                           Y       H-1B   GRAPHIC DESIGNER   \n",
       "173865   CERTIFIED                           Y       H-1B          DEVELOPER   \n",
       "268274   CERTIFIED                           Y       H-1B  SOFTWARE ENGINEER   \n",
       "511564   CERTIFIED                           Y       H-1B    ANALYST-TESTING   \n",
       "280523   CERTIFIED                           Y       H-1B  SOFTWARE ENGINEER   \n",
       "\n",
       "       FULL_TIME_POSITION H-1B_DEPENDENT  \\\n",
       "638954                  Y              N   \n",
       "173865                  Y              Y   \n",
       "268274                  Y              Y   \n",
       "511564                  Y              Y   \n",
       "280523                  Y              N   \n",
       "\n",
       "                               EMPLOYER_NAME SECONDARY_ENTITY_1  \\\n",
       "638954  LOS ANGELES SA RANG COMMUNITY CHURCH                  N   \n",
       "173865     TATA CONSULTANCY SERVICES LIMITED                  Y   \n",
       "268274                          C3 IOT, INC.                  N   \n",
       "511564     TATA CONSULTANCY SERVICES LIMITED                  Y   \n",
       "280523                         RYZLINK CORP.                  N   \n",
       "\n",
       "                                SOC_TITLE SOC_CODE  ...  CHANGE_EMPLOYER  \\\n",
       "638954                  GRAPHIC DESIGNERS  27-1024  ...                0   \n",
       "173865               COMPUTER PROGRAMMERS  15-1131  ...                0   \n",
       "268274  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...                0   \n",
       "511564    COMPUTER OCCUPATIONS, ALL OTHER  15-1199  ...                0   \n",
       "280523  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...                0   \n",
       "\n",
       "       AMENDED_PETITION WILLFUL_VIOLATOR  WAGE_RATE_OF_PAY_FROM_1  \\\n",
       "638954                0                N                  34382.0   \n",
       "173865                0                N                  85883.0   \n",
       "268274                0                N                 100000.0   \n",
       "511564                0                N                  67725.0   \n",
       "280523                0                N                 109242.0   \n",
       "\n",
       "        WAGE_RATE_OF_PAY_TO_1  WAGE_UNIT_OF_PAY_1  TOTAL_WORKER_POSITIONS  \\\n",
       "638954                34800.0                Year                     1.0   \n",
       "173865                97000.0                Year                     1.0   \n",
       "268274               110000.0                Year                     1.0   \n",
       "511564                97800.0                Year                     1.0   \n",
       "280523               109242.0                Year                     1.0   \n",
       "\n",
       "       PREVAILING_WAGE_1  AGENT_REPRESENTING_EMPLOYER_0  \\\n",
       "638954           34382.0                              0   \n",
       "173865           85883.0                              0   \n",
       "268274           94557.0                              0   \n",
       "511564           67725.0                              0   \n",
       "280523          109242.0                              0   \n",
       "\n",
       "        AGENT_REPRESENTING_EMPLOYER_1  \n",
       "638954                              1  \n",
       "173865                              1  \n",
       "268274                              1  \n",
       "511564                              1  \n",
       "280523                              1  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #AGENT_REPRESENTING_EMPLOYER\n",
    "be=BinaryEncoder()\n",
    "be_enc=be.fit_transform(dt['AGENT_REPRESENTING_EMPLOYER'])\n",
    "dt=pd.concat([dt,be_enc],axis=1)\n",
    "dt.sample(frac=1).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>WILLFUL_VIOLATOR</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_0</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>FULL_TIME_POSITION_0</th>\n",
       "      <th>FULL_TIME_POSITION_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>93731</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>COMPUTER SYSTEMS ANALYSTS</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>ERNST &amp; YOUNG U.S. LLP</td>\n",
       "      <td>Y</td>\n",
       "      <td>COMPUTER SYSTEMS ANALYSTS</td>\n",
       "      <td>15-1121</td>\n",
       "      <td>...</td>\n",
       "      <td>N</td>\n",
       "      <td>81162.0</td>\n",
       "      <td>110000.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>81162.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341951</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SYSTEMS ENGINEER IV</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>ERP ANALYSTS, INC</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>N</td>\n",
       "      <td>116522.0</td>\n",
       "      <td>116522.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>116522.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21090</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ENGINEERING DIVISION MANAGER</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>BOBRICK WASHROOM EQUIPMENT, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>ARCHITECTURAL AND ENGINEERING MANAGERS</td>\n",
       "      <td>11-9041</td>\n",
       "      <td>...</td>\n",
       "      <td>N</td>\n",
       "      <td>189900.0</td>\n",
       "      <td>189900.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>104978.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556271</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>N</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>PRODUCT DEVELOPMENT ENGINEER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>DIGITAL SCRIPTS INC</td>\n",
       "      <td>Y</td>\n",
       "      <td>ELECTRICAL ENGINEERS</td>\n",
       "      <td>17-2071</td>\n",
       "      <td>...</td>\n",
       "      <td>N</td>\n",
       "      <td>38.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>Hour</td>\n",
       "      <td>1.0</td>\n",
       "      <td>36.51</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421303</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>N</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SENIOR ORACLE DEVELOPER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>XTGLOBAL, INC.,</td>\n",
       "      <td>Y</td>\n",
       "      <td>SOFTWARE DEVELOPERS, SYSTEMS SOFTWARE</td>\n",
       "      <td>15-1133</td>\n",
       "      <td>...</td>\n",
       "      <td>N</td>\n",
       "      <td>107494.0</td>\n",
       "      <td>107494.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>107494.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS  \\\n",
       "93731    CERTIFIED                           Y       H-1B   \n",
       "341951   CERTIFIED                           Y       H-1B   \n",
       "21090    CERTIFIED                           Y       H-1B   \n",
       "556271   CERTIFIED                           N       H-1B   \n",
       "421303   CERTIFIED                           N       H-1B   \n",
       "\n",
       "                           JOB_TITLE FULL_TIME_POSITION H-1B_DEPENDENT  \\\n",
       "93731      COMPUTER SYSTEMS ANALYSTS                  Y              N   \n",
       "341951           SYSTEMS ENGINEER IV                  Y              Y   \n",
       "21090   ENGINEERING DIVISION MANAGER                  Y              N   \n",
       "556271  PRODUCT DEVELOPMENT ENGINEER                  Y              Y   \n",
       "421303       SENIOR ORACLE DEVELOPER                  Y              Y   \n",
       "\n",
       "                           EMPLOYER_NAME SECONDARY_ENTITY_1  \\\n",
       "93731             ERNST & YOUNG U.S. LLP                  Y   \n",
       "341951                 ERP ANALYSTS, INC                  N   \n",
       "21090   BOBRICK WASHROOM EQUIPMENT, INC.                  N   \n",
       "556271               DIGITAL SCRIPTS INC                  Y   \n",
       "421303                   XTGLOBAL, INC.,                  Y   \n",
       "\n",
       "                                     SOC_TITLE SOC_CODE  ...  \\\n",
       "93731                COMPUTER SYSTEMS ANALYSTS  15-1121  ...   \n",
       "341951       SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...   \n",
       "21090   ARCHITECTURAL AND ENGINEERING MANAGERS  11-9041  ...   \n",
       "556271                    ELECTRICAL ENGINEERS  17-2071  ...   \n",
       "421303   SOFTWARE DEVELOPERS, SYSTEMS SOFTWARE  15-1133  ...   \n",
       "\n",
       "        WILLFUL_VIOLATOR WAGE_RATE_OF_PAY_FROM_1 WAGE_RATE_OF_PAY_TO_1  \\\n",
       "93731                  N                 81162.0              110000.0   \n",
       "341951                 N                116522.0              116522.0   \n",
       "21090                  N                189900.0              189900.0   \n",
       "556271                 N                    38.0                  38.0   \n",
       "421303                 N                107494.0              107494.0   \n",
       "\n",
       "        WAGE_UNIT_OF_PAY_1  TOTAL_WORKER_POSITIONS  PREVAILING_WAGE_1  \\\n",
       "93731                 Year                     1.0           81162.00   \n",
       "341951                Year                     1.0          116522.00   \n",
       "21090                 Year                     1.0          104978.00   \n",
       "556271                Hour                     1.0              36.51   \n",
       "421303                Year                     1.0          107494.00   \n",
       "\n",
       "        AGENT_REPRESENTING_EMPLOYER_0 AGENT_REPRESENTING_EMPLOYER_1  \\\n",
       "93731                               0                             1   \n",
       "341951                              0                             1   \n",
       "21090                               0                             1   \n",
       "556271                              1                             0   \n",
       "421303                              1                             0   \n",
       "\n",
       "        FULL_TIME_POSITION_0  FULL_TIME_POSITION_1  \n",
       "93731                      0                     1  \n",
       "341951                     0                     1  \n",
       "21090                      0                     1  \n",
       "556271                     0                     1  \n",
       "421303                     0                     1  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #FULL_TIME_POSITION\n",
    "be1=BinaryEncoder()\n",
    "be_enc1=be1.fit_transform(dt['FULL_TIME_POSITION'])\n",
    "dt=pd.concat([dt,be_enc1],axis=1)\n",
    "dt.sample(frac=1).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_0</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>FULL_TIME_POSITION_0</th>\n",
       "      <th>FULL_TIME_POSITION_1</th>\n",
       "      <th>H-1B_DEPENDENT_0</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>151033</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SPECIALIST-TECHNOLOGY/COMPUTER SYSTEMS ANALYST</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>SYNECHRON, INC.</td>\n",
       "      <td>Y</td>\n",
       "      <td>COMPUTER SYSTEMS ANALYSTS</td>\n",
       "      <td>15-1121</td>\n",
       "      <td>...</td>\n",
       "      <td>89175.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>79206.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256246</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>VICE PRESIDENT; PROGRAMMER PROF MKTS</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>MERRILL LYNCH</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>152000.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>138861.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>383559</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>N</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SENIOR SOFTWARE DEVELOPER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>MASTECH DIGITAL TECHNOLOGIES, INC., A MASTECH ...</td>\n",
       "      <td>Y</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>117773.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>6.0</td>\n",
       "      <td>102773.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8729</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>N</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>TECHNICAL ARCHITECT/SENIOR DATA SCIENTIST</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>INFOSHARE SYSTEMS, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>COMPUTER AND INFORMATION SYSTEMS MANAGERS</td>\n",
       "      <td>11-3021</td>\n",
       "      <td>...</td>\n",
       "      <td>110000.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>104478.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82270</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>3D MODELING SOFTWARE DEVELOPMENT, DIRECTOR</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>SPATIAL CORP.</td>\n",
       "      <td>N</td>\n",
       "      <td>COMPUTER AND INFORMATION RESEARCH SCIENTISTS</td>\n",
       "      <td>15-1111</td>\n",
       "      <td>...</td>\n",
       "      <td>150062.0</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>109117.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS  \\\n",
       "151033   CERTIFIED                           Y       H-1B   \n",
       "256246   CERTIFIED                           Y       H-1B   \n",
       "383559   CERTIFIED                           N       H-1B   \n",
       "8729     CERTIFIED                           N       H-1B   \n",
       "82270    CERTIFIED                           Y       H-1B   \n",
       "\n",
       "                                             JOB_TITLE FULL_TIME_POSITION  \\\n",
       "151033  SPECIALIST-TECHNOLOGY/COMPUTER SYSTEMS ANALYST                  Y   \n",
       "256246            VICE PRESIDENT; PROGRAMMER PROF MKTS                  Y   \n",
       "383559                       SENIOR SOFTWARE DEVELOPER                  Y   \n",
       "8729         TECHNICAL ARCHITECT/SENIOR DATA SCIENTIST                  Y   \n",
       "82270       3D MODELING SOFTWARE DEVELOPMENT, DIRECTOR                  Y   \n",
       "\n",
       "       H-1B_DEPENDENT                                      EMPLOYER_NAME  \\\n",
       "151033              Y                                    SYNECHRON, INC.   \n",
       "256246              N                                      MERRILL LYNCH   \n",
       "383559              Y  MASTECH DIGITAL TECHNOLOGIES, INC., A MASTECH ...   \n",
       "8729                Y                            INFOSHARE SYSTEMS, INC.   \n",
       "82270               N                                      SPATIAL CORP.   \n",
       "\n",
       "       SECONDARY_ENTITY_1                                     SOC_TITLE  \\\n",
       "151033                  Y                     COMPUTER SYSTEMS ANALYSTS   \n",
       "256246                  N             SOFTWARE DEVELOPERS, APPLICATIONS   \n",
       "383559                  Y             SOFTWARE DEVELOPERS, APPLICATIONS   \n",
       "8729                    N     COMPUTER AND INFORMATION SYSTEMS MANAGERS   \n",
       "82270                   N  COMPUTER AND INFORMATION RESEARCH SCIENTISTS   \n",
       "\n",
       "       SOC_CODE  ...  WAGE_RATE_OF_PAY_TO_1 WAGE_UNIT_OF_PAY_1  \\\n",
       "151033  15-1121  ...                89175.0               Year   \n",
       "256246  15-1132  ...               152000.0               Year   \n",
       "383559  15-1132  ...               117773.0               Year   \n",
       "8729    11-3021  ...               110000.0               Year   \n",
       "82270   15-1111  ...               150062.0               Year   \n",
       "\n",
       "       TOTAL_WORKER_POSITIONS  PREVAILING_WAGE_1  \\\n",
       "151033                    1.0            79206.0   \n",
       "256246                    1.0           138861.0   \n",
       "383559                    6.0           102773.0   \n",
       "8729                      1.0           104478.0   \n",
       "82270                     1.0           109117.0   \n",
       "\n",
       "        AGENT_REPRESENTING_EMPLOYER_0  AGENT_REPRESENTING_EMPLOYER_1  \\\n",
       "151033                              0                              1   \n",
       "256246                              0                              1   \n",
       "383559                              1                              0   \n",
       "8729                                1                              0   \n",
       "82270                               0                              1   \n",
       "\n",
       "        FULL_TIME_POSITION_0 FULL_TIME_POSITION_1  H-1B_DEPENDENT_0  \\\n",
       "151033                     0                    1                 1   \n",
       "256246                     0                    1                 0   \n",
       "383559                     0                    1                 1   \n",
       "8729                       0                    1                 1   \n",
       "82270                      0                    1                 0   \n",
       "\n",
       "        H-1B_DEPENDENT_1  \n",
       "151033                 0  \n",
       "256246                 1  \n",
       "383559                 0  \n",
       "8729                   0  \n",
       "82270                  1  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #H-1B_DEPENDENT\n",
    "be2=BinaryEncoder()\n",
    "be_enc2=be2.fit_transform(dt['H-1B_DEPENDENT'])\n",
    "dt=pd.concat([dt,be_enc2],axis=1)\n",
    "dt.sample(frac=1).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_0</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>FULL_TIME_POSITION_0</th>\n",
       "      <th>FULL_TIME_POSITION_1</th>\n",
       "      <th>H-1B_DEPENDENT_0</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "      <th>SECONDARY_ENTITY_1_0</th>\n",
       "      <th>SECONDARY_ENTITY_1_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>37044</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ASSISTANT MANAGER</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>EXLSERVICE.COM, LLC</td>\n",
       "      <td>N</td>\n",
       "      <td>MANAGEMENT ANALYSTS</td>\n",
       "      <td>13-1111</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>87506.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279494</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>PEOPLESOFT SENIOR DEVELOPER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>ERP ANALYSTS, INC.</td>\n",
       "      <td>Y</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>122283.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346626</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>BUSINESS ANALYST</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>TIMESQUARE IT, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>84240.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591706</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SCIENTIST II, NDS</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>BOEHRINGER INGELHEIM PHARMACEUTICALS, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>BIOCHEMISTS AND BIOPHYSICISTS</td>\n",
       "      <td>19-1021</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>55848.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471221</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>MACHINE LEARNING OPERATIONS ENGINEER (15-1199.02)</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>WAYFAIR LLC</td>\n",
       "      <td>N</td>\n",
       "      <td>COMPUTER OCCUPATIONS, ALL OTHER</td>\n",
       "      <td>15-1199</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>57637.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS  \\\n",
       "37044    CERTIFIED                           Y       H-1B   \n",
       "279494   CERTIFIED                           Y       H-1B   \n",
       "346626   CERTIFIED                           Y       H-1B   \n",
       "591706   CERTIFIED                           Y       H-1B   \n",
       "471221   CERTIFIED                           Y       H-1B   \n",
       "\n",
       "                                                JOB_TITLE FULL_TIME_POSITION  \\\n",
       "37044                                   ASSISTANT MANAGER                  Y   \n",
       "279494                        PEOPLESOFT SENIOR DEVELOPER                  Y   \n",
       "346626                                   BUSINESS ANALYST                  Y   \n",
       "591706                                  SCIENTIST II, NDS                  Y   \n",
       "471221  MACHINE LEARNING OPERATIONS ENGINEER (15-1199.02)                  Y   \n",
       "\n",
       "       H-1B_DEPENDENT                               EMPLOYER_NAME  \\\n",
       "37044               N                         EXLSERVICE.COM, LLC   \n",
       "279494              Y                          ERP ANALYSTS, INC.   \n",
       "346626              N                         TIMESQUARE IT, INC.   \n",
       "591706              N  BOEHRINGER INGELHEIM PHARMACEUTICALS, INC.   \n",
       "471221              N                                 WAYFAIR LLC   \n",
       "\n",
       "       SECONDARY_ENTITY_1                          SOC_TITLE SOC_CODE  ...  \\\n",
       "37044                   N                MANAGEMENT ANALYSTS  13-1111  ...   \n",
       "279494                  Y  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...   \n",
       "346626                  N  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...   \n",
       "591706                  N      BIOCHEMISTS AND BIOPHYSICISTS  19-1021  ...   \n",
       "471221                  N    COMPUTER OCCUPATIONS, ALL OTHER  15-1199  ...   \n",
       "\n",
       "        TOTAL_WORKER_POSITIONS PREVAILING_WAGE_1  \\\n",
       "37044                      5.0           87506.0   \n",
       "279494                     1.0          122283.0   \n",
       "346626                     1.0           84240.0   \n",
       "591706                     1.0           55848.0   \n",
       "471221                    20.0           57637.0   \n",
       "\n",
       "       AGENT_REPRESENTING_EMPLOYER_0  AGENT_REPRESENTING_EMPLOYER_1  \\\n",
       "37044                              0                              1   \n",
       "279494                             0                              1   \n",
       "346626                             0                              1   \n",
       "591706                             0                              1   \n",
       "471221                             0                              1   \n",
       "\n",
       "        FULL_TIME_POSITION_0  FULL_TIME_POSITION_1  H-1B_DEPENDENT_0  \\\n",
       "37044                      0                     1                 0   \n",
       "279494                     0                     1                 1   \n",
       "346626                     0                     1                 0   \n",
       "591706                     0                     1                 0   \n",
       "471221                     0                     1                 0   \n",
       "\n",
       "       H-1B_DEPENDENT_1  SECONDARY_ENTITY_1_0  SECONDARY_ENTITY_1_1  \n",
       "37044                 1                     0                     1  \n",
       "279494                0                     1                     0  \n",
       "346626                1                     0                     1  \n",
       "591706                1                     0                     1  \n",
       "471221                1                     0                     1  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #SECONDARY_ENTITY_1\n",
    "be3=BinaryEncoder()\n",
    "be_enc3=be3.fit_transform(dt['SECONDARY_ENTITY_1'])\n",
    "dt=pd.concat([dt,be_enc3],axis=1)\n",
    "dt.sample(frac=1).head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER</th>\n",
       "      <th>VISA_CLASS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>FULL_TIME_POSITION</th>\n",
       "      <th>H-1B_DEPENDENT</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SECONDARY_ENTITY_1</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>...</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_0</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>FULL_TIME_POSITION_0</th>\n",
       "      <th>FULL_TIME_POSITION_1</th>\n",
       "      <th>H-1B_DEPENDENT_0</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "      <th>SECONDARY_ENTITY_1_0</th>\n",
       "      <th>SECONDARY_ENTITY_1_1</th>\n",
       "      <th>WILLFUL_VIOLATOR_0</th>\n",
       "      <th>WILLFUL_VIOLATOR_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>263990</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>SOFTWARE ENGINEER</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>GOVERNMENT SCIENTIFIC SOURCE, INC.</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>546194</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>FIRE SAFETY SPECIALIST</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>HOLMES FIRE, L.P.</td>\n",
       "      <td>N</td>\n",
       "      <td>CIVIL ENGINEERS</td>\n",
       "      <td>17-2051</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>547329</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>HARDWARE ENGINEER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>L&amp;T TECHNOLOGY SERVICES LIMITED</td>\n",
       "      <td>Y</td>\n",
       "      <td>COMPUTER HARDWARE ENGINEERS</td>\n",
       "      <td>17-2061</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282733</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>Y</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>PEGA DEVELOPER</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>MANASI INFORMATION TECHNOLOGIES INC</td>\n",
       "      <td>N</td>\n",
       "      <td>SOFTWARE DEVELOPERS, APPLICATIONS</td>\n",
       "      <td>15-1132</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>624109</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>N</td>\n",
       "      <td>H-1B</td>\n",
       "      <td>ASSISTANT PROFESSOR</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>UNIVERSITY OF PITTSBURGH</td>\n",
       "      <td>N</td>\n",
       "      <td>ECONOMICS TEACHERS, POSTSECONDARY</td>\n",
       "      <td>25-1063</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       CASE_STATUS AGENT_REPRESENTING_EMPLOYER VISA_CLASS  \\\n",
       "263990   CERTIFIED                           Y       H-1B   \n",
       "546194   CERTIFIED                           Y       H-1B   \n",
       "547329   CERTIFIED                           Y       H-1B   \n",
       "282733   CERTIFIED                           Y       H-1B   \n",
       "624109   CERTIFIED                           N       H-1B   \n",
       "\n",
       "                     JOB_TITLE FULL_TIME_POSITION H-1B_DEPENDENT  \\\n",
       "263990       SOFTWARE ENGINEER                  Y              N   \n",
       "546194  FIRE SAFETY SPECIALIST                  Y              N   \n",
       "547329       HARDWARE ENGINEER                  Y              Y   \n",
       "282733          PEGA DEVELOPER                  Y              Y   \n",
       "624109     ASSISTANT PROFESSOR                  Y              N   \n",
       "\n",
       "                              EMPLOYER_NAME SECONDARY_ENTITY_1  \\\n",
       "263990   GOVERNMENT SCIENTIFIC SOURCE, INC.                  N   \n",
       "546194                    HOLMES FIRE, L.P.                  N   \n",
       "547329      L&T TECHNOLOGY SERVICES LIMITED                  Y   \n",
       "282733  MANASI INFORMATION TECHNOLOGIES INC                  N   \n",
       "624109             UNIVERSITY OF PITTSBURGH                  N   \n",
       "\n",
       "                                SOC_TITLE SOC_CODE  ...  \\\n",
       "263990  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...   \n",
       "546194                    CIVIL ENGINEERS  17-2051  ...   \n",
       "547329        COMPUTER HARDWARE ENGINEERS  17-2061  ...   \n",
       "282733  SOFTWARE DEVELOPERS, APPLICATIONS  15-1132  ...   \n",
       "624109  ECONOMICS TEACHERS, POSTSECONDARY  25-1063  ...   \n",
       "\n",
       "        AGENT_REPRESENTING_EMPLOYER_0 AGENT_REPRESENTING_EMPLOYER_1  \\\n",
       "263990                              0                             1   \n",
       "546194                              0                             1   \n",
       "547329                              0                             1   \n",
       "282733                              0                             1   \n",
       "624109                              1                             0   \n",
       "\n",
       "       FULL_TIME_POSITION_0  FULL_TIME_POSITION_1  H-1B_DEPENDENT_0  \\\n",
       "263990                    0                     1                 0   \n",
       "546194                    0                     1                 0   \n",
       "547329                    0                     1                 1   \n",
       "282733                    0                     1                 1   \n",
       "624109                    0                     1                 0   \n",
       "\n",
       "        H-1B_DEPENDENT_1  SECONDARY_ENTITY_1_0 SECONDARY_ENTITY_1_1  \\\n",
       "263990                 1                     0                    1   \n",
       "546194                 1                     0                    1   \n",
       "547329                 0                     1                    0   \n",
       "282733                 0                     0                    1   \n",
       "624109                 1                     0                    1   \n",
       "\n",
       "        WILLFUL_VIOLATOR_0  WILLFUL_VIOLATOR_1  \n",
       "263990                   0                   1  \n",
       "546194                   0                   1  \n",
       "547329                   0                   1  \n",
       "282733                   0                   1  \n",
       "624109                   0                   1  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #WILLFUL_VIOLATOR\n",
    "be4=BinaryEncoder()\n",
    "be_enc4=be4.fit_transform(dt['WILLFUL_VIOLATOR'])\n",
    "dt=pd.concat([dt,be_enc4],axis=1)\n",
    "dt.sample(frac=1).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping columns which have performed binary encoding\n",
    "dt = dt.drop(['AGENT_REPRESENTING_EMPLOYER','VISA_CLASS','FULL_TIME_POSITION','H-1B_DEPENDENT','SECONDARY_ENTITY_1','WILLFUL_VIOLATOR'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>NEW_EMPLOYMENT</th>\n",
       "      <th>CONTINUED_EMPLOYMENT</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>...</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>FULL_TIME_POSITION_1</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "      <th>SECONDARY_ENTITY_1_1</th>\n",
       "      <th>WILLFUL_VIOLATOR_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>ACD WRITING</td>\n",
       "      <td>APPLE INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>334111.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>154232.00</td>\n",
       "      <td>225400.00</td>\n",
       "      <td>Year</td>\n",
       "      <td>1.0</td>\n",
       "      <td>154232.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGER</td>\n",
       "      <td>TAOLA, INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>516110.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>47.01</td>\n",
       "      <td>47.01</td>\n",
       "      <td>Hour</td>\n",
       "      <td>1.0</td>\n",
       "      <td>47.01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CASE_STATUS                           JOB_TITLE EMPLOYER_NAME  \\\n",
       "72   CERTIFIED                         ACD WRITING    APPLE INC.   \n",
       "73   CERTIFIED  ADVERTISING AND PROMOTIONS MANAGER   TAOLA, INC.   \n",
       "\n",
       "                              SOC_TITLE SOC_CODE  NAICS_CODE NEW_EMPLOYMENT  \\\n",
       "72  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    334111.0              0   \n",
       "73  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    516110.0              0   \n",
       "\n",
       "   CONTINUED_EMPLOYMENT  CHANGE_PREVIOUS_EMPLOYMENT  \\\n",
       "72                    1                           0   \n",
       "73                    0                           0   \n",
       "\n",
       "    NEW_CONCURRENT_EMPLOYMENT  ...  WAGE_RATE_OF_PAY_FROM_1  \\\n",
       "72                        0.0  ...                154232.00   \n",
       "73                        0.0  ...                    47.01   \n",
       "\n",
       "    WAGE_RATE_OF_PAY_TO_1  WAGE_UNIT_OF_PAY_1  TOTAL_WORKER_POSITIONS  \\\n",
       "72              225400.00                Year                     1.0   \n",
       "73                  47.01                Hour                     1.0   \n",
       "\n",
       "   PREVAILING_WAGE_1  AGENT_REPRESENTING_EMPLOYER_1  FULL_TIME_POSITION_1  \\\n",
       "72         154232.00                              1                     1   \n",
       "73             47.01                              1                     0   \n",
       "\n",
       "    H-1B_DEPENDENT_1  SECONDARY_ENTITY_1_1  WILLFUL_VIOLATOR_1  \n",
       "72                 1                     1                   1  \n",
       "73                 1                     1                   1  \n",
       "\n",
       "[2 rows x 22 columns]"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #dropping columns\n",
    "dt = dt.drop(['AGENT_REPRESENTING_EMPLOYER_0'], axis=1)\n",
    "dt = dt.drop(['FULL_TIME_POSITION_0'], axis=1)\n",
    "dt = dt.drop(['H-1B_DEPENDENT_0'], axis=1)\n",
    "dt = dt.drop(['SECONDARY_ENTITY_1_0'], axis=1)\n",
    "dt = dt.drop(['WILLFUL_VIOLATOR_0'], axis=1)\n",
    "dt.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_STATUS                       object\n",
       "JOB_TITLE                         object\n",
       "EMPLOYER_NAME                     object\n",
       "SOC_TITLE                         object\n",
       "SOC_CODE                          object\n",
       "NAICS_CODE                       float64\n",
       "NEW_EMPLOYMENT                    object\n",
       "CONTINUED_EMPLOYMENT              object\n",
       "CHANGE_PREVIOUS_EMPLOYMENT         int64\n",
       "NEW_CONCURRENT_EMPLOYMENT        float64\n",
       "CHANGE_EMPLOYER                    int64\n",
       "AMENDED_PETITION                   int64\n",
       "WAGE_RATE_OF_PAY_FROM_1          float64\n",
       "WAGE_RATE_OF_PAY_TO_1            float64\n",
       "WAGE_UNIT_OF_PAY_1                object\n",
       "TOTAL_WORKER_POSITIONS           float64\n",
       "PREVAILING_WAGE_1                float64\n",
       "AGENT_REPRESENTING_EMPLOYER_1      int64\n",
       "FULL_TIME_POSITION_1               int64\n",
       "H-1B_DEPENDENT_1                   int64\n",
       "SECONDARY_ENTITY_1_1               int64\n",
       "WILLFUL_VIOLATOR_1                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Lets Perform Frequency Encoding On Rest Categorical Variables\n",
    "JOB_TITLE, EMPLOYER_NAME,SOC_TITLE,SOC_CODE,\n",
    "NEW_EMPLOYMENT,CONTINUED_EMPLOYMENT,WAGE_UNIT_OF_PAY_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on JOB_TITLE\n",
    "col='JOB_TITLE'\n",
    "#group by frequency\n",
    "freq=dt.groupby(col).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col)]=dt[col].map(freq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'EMPLOYER_NAME'\n",
    "col1='EMPLOYER_NAME'\n",
    "#group by frequency\n",
    "freq1=dt.groupby(col1).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col1)]=dt[col1].map(freq1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'SOC_TITLE'\n",
    "col2='SOC_TITLE'\n",
    "#group by frequency\n",
    "freq2=dt.groupby(col2).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col2)]=dt[col2].map(freq2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'SOC_CODE'\n",
    "col3='SOC_CODE'\n",
    "#group by frequency\n",
    "freq3=dt.groupby(col3).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col3)]=dt[col3].map(freq3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'NEW_EMPLOYMENT'\n",
    "col4='NEW_EMPLOYMENT'\n",
    "#group by frequency\n",
    "freq4=dt.groupby(col4).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col4)]=dt[col4].map(freq4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'CONTINUED_EMPLOYMENT'\n",
    "col5='CONTINUED_EMPLOYMENT'\n",
    "#group by frequency\n",
    "freq5=dt.groupby(col5).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col5)]=dt[col5].map(freq5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [],
   "source": [
    "#performing frequency encoding on 'WAGE_UNIT_OF_PAY_1'\n",
    "col6='WAGE_UNIT_OF_PAY_1'\n",
    "#group by frequency\n",
    "freq6=dt.groupby(col6).size()/len(dt)\n",
    "#map the values\n",
    "dt.loc[:, \"{}_freq\".format(col6)]=dt[col6].map(freq6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CASE_STATUS</th>\n",
       "      <th>JOB_TITLE</th>\n",
       "      <th>EMPLOYER_NAME</th>\n",
       "      <th>SOC_TITLE</th>\n",
       "      <th>SOC_CODE</th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>NEW_EMPLOYMENT</th>\n",
       "      <th>CONTINUED_EMPLOYMENT</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>...</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "      <th>SECONDARY_ENTITY_1_1</th>\n",
       "      <th>WILLFUL_VIOLATOR_1</th>\n",
       "      <th>JOB_TITLE_freq</th>\n",
       "      <th>EMPLOYER_NAME_freq</th>\n",
       "      <th>SOC_TITLE_freq</th>\n",
       "      <th>SOC_CODE_freq</th>\n",
       "      <th>NEW_EMPLOYMENT_freq</th>\n",
       "      <th>CONTINUED_EMPLOYMENT_freq</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1_freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>ACD WRITING</td>\n",
       "      <td>APPLE INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>334111.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.001712</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.211431</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGER</td>\n",
       "      <td>TAOLA, INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>516110.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.058002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>DIGITAL ADVERTISING MANAGER</td>\n",
       "      <td>PROBOSCIS, INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>541512.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>CREATIVE AGENCY PARTNER</td>\n",
       "      <td>FACEBOOK, INC.</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>518112.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000929</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>CERTIFIED</td>\n",
       "      <td>GLOBAL BRAND MANAGER</td>\n",
       "      <td>SWI-DE, LLC</td>\n",
       "      <td>ADVERTISING AND PROMOTIONS MANAGERS</td>\n",
       "      <td>11-2011</td>\n",
       "      <td>31222.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CASE_STATUS                           JOB_TITLE    EMPLOYER_NAME  \\\n",
       "72   CERTIFIED                         ACD WRITING       APPLE INC.   \n",
       "73   CERTIFIED  ADVERTISING AND PROMOTIONS MANAGER      TAOLA, INC.   \n",
       "75   CERTIFIED         DIGITAL ADVERTISING MANAGER  PROBOSCIS, INC.   \n",
       "79   CERTIFIED             CREATIVE AGENCY PARTNER   FACEBOOK, INC.   \n",
       "84   CERTIFIED                GLOBAL BRAND MANAGER      SWI-DE, LLC   \n",
       "\n",
       "                              SOC_TITLE SOC_CODE  NAICS_CODE NEW_EMPLOYMENT  \\\n",
       "72  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    334111.0              0   \n",
       "73  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    516110.0              0   \n",
       "75  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    541512.0              0   \n",
       "79  ADVERTISING AND PROMOTIONS MANAGERS  11-2011    518112.0              0   \n",
       "84  ADVERTISING AND PROMOTIONS MANAGERS  11-2011     31222.0              0   \n",
       "\n",
       "   CONTINUED_EMPLOYMENT  CHANGE_PREVIOUS_EMPLOYMENT  \\\n",
       "72                    1                           0   \n",
       "73                    0                           0   \n",
       "75                    0                           0   \n",
       "79                    0                           1   \n",
       "84                    0                           0   \n",
       "\n",
       "    NEW_CONCURRENT_EMPLOYMENT  ...  H-1B_DEPENDENT_1  SECONDARY_ENTITY_1_1  \\\n",
       "72                        0.0  ...                 1                     1   \n",
       "73                        0.0  ...                 1                     1   \n",
       "75                        0.0  ...                 1                     1   \n",
       "79                        0.0  ...                 0                     1   \n",
       "84                        0.0  ...                 1                     1   \n",
       "\n",
       "    WILLFUL_VIOLATOR_1  JOB_TITLE_freq EMPLOYER_NAME_freq  SOC_TITLE_freq  \\\n",
       "72                   1        0.000003           0.001712        0.000247   \n",
       "73                   1        0.000014           0.000003        0.000247   \n",
       "75                   1        0.000003           0.000003        0.000247   \n",
       "79                   1        0.000003           0.000929        0.000247   \n",
       "84                   1        0.000003           0.000003        0.000247   \n",
       "\n",
       "    SOC_CODE_freq  NEW_EMPLOYMENT_freq  CONTINUED_EMPLOYMENT_freq  \\\n",
       "72       0.000251             0.542003                   0.211431   \n",
       "73       0.000251             0.542003                   0.770312   \n",
       "75       0.000251             0.542003                   0.770312   \n",
       "79       0.000251             0.542003                   0.770312   \n",
       "84       0.000251             0.542003                   0.770312   \n",
       "\n",
       "    WAGE_UNIT_OF_PAY_1_freq  \n",
       "72                 0.941281  \n",
       "73                 0.058002  \n",
       "75                 0.941281  \n",
       "79                 0.941281  \n",
       "84                 0.941281  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping columns which have performed frequency encoding\n",
    "dt =dt.drop(['JOB_TITLE','EMPLOYER_NAME','SOC_TITLE','SOC_CODE','NEW_EMPLOYMENT','CONTINUED_EMPLOYMENT','WAGE_UNIT_OF_PAY_1'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CASE_STATUS                       object\n",
       "NAICS_CODE                       float64\n",
       "CHANGE_PREVIOUS_EMPLOYMENT         int64\n",
       "NEW_CONCURRENT_EMPLOYMENT        float64\n",
       "CHANGE_EMPLOYER                    int64\n",
       "AMENDED_PETITION                   int64\n",
       "WAGE_RATE_OF_PAY_FROM_1          float64\n",
       "WAGE_RATE_OF_PAY_TO_1            float64\n",
       "TOTAL_WORKER_POSITIONS           float64\n",
       "PREVAILING_WAGE_1                float64\n",
       "AGENT_REPRESENTING_EMPLOYER_1      int64\n",
       "FULL_TIME_POSITION_1               int64\n",
       "H-1B_DEPENDENT_1                   int64\n",
       "SECONDARY_ENTITY_1_1               int64\n",
       "WILLFUL_VIOLATOR_1                 int64\n",
       "JOB_TITLE_freq                   float64\n",
       "EMPLOYER_NAME_freq               float64\n",
       "SOC_TITLE_freq                   float64\n",
       "SOC_CODE_freq                    float64\n",
       "NEW_EMPLOYMENT_freq              float64\n",
       "CONTINUED_EMPLOYMENT_freq        float64\n",
       "WAGE_UNIT_OF_PAY_1_freq          float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Splitting The Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sklearn.metrics as metrics\n",
    "from sklearn import preprocessing\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.naive_bayes import BernoulliNB\n",
    "from sklearn.tree import DecisionTreeClassifier  \n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Independent Variables\n",
    "x = dt.drop(['CASE_STATUS'], axis=1) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependent variables\n",
    "y = dt['CASE_STATUS'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NAICS_CODE</th>\n",
       "      <th>CHANGE_PREVIOUS_EMPLOYMENT</th>\n",
       "      <th>NEW_CONCURRENT_EMPLOYMENT</th>\n",
       "      <th>CHANGE_EMPLOYER</th>\n",
       "      <th>AMENDED_PETITION</th>\n",
       "      <th>WAGE_RATE_OF_PAY_FROM_1</th>\n",
       "      <th>WAGE_RATE_OF_PAY_TO_1</th>\n",
       "      <th>TOTAL_WORKER_POSITIONS</th>\n",
       "      <th>PREVAILING_WAGE_1</th>\n",
       "      <th>AGENT_REPRESENTING_EMPLOYER_1</th>\n",
       "      <th>...</th>\n",
       "      <th>H-1B_DEPENDENT_1</th>\n",
       "      <th>SECONDARY_ENTITY_1_1</th>\n",
       "      <th>WILLFUL_VIOLATOR_1</th>\n",
       "      <th>JOB_TITLE_freq</th>\n",
       "      <th>EMPLOYER_NAME_freq</th>\n",
       "      <th>SOC_TITLE_freq</th>\n",
       "      <th>SOC_CODE_freq</th>\n",
       "      <th>NEW_EMPLOYMENT_freq</th>\n",
       "      <th>CONTINUED_EMPLOYMENT_freq</th>\n",
       "      <th>WAGE_UNIT_OF_PAY_1_freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>334111.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>154232.00</td>\n",
       "      <td>225400.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>154232.00</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.001712</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.211431</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>516110.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>47.01</td>\n",
       "      <td>47.01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>47.01</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.058002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>541512.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>47549.00</td>\n",
       "      <td>47549.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>47549.00</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>518112.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>214230.00</td>\n",
       "      <td>214230.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>156146.00</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000929</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>31222.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90000.00</td>\n",
       "      <td>110000.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>75026.00</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000251</td>\n",
       "      <td>0.542003</td>\n",
       "      <td>0.770312</td>\n",
       "      <td>0.941281</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    NAICS_CODE  CHANGE_PREVIOUS_EMPLOYMENT  NEW_CONCURRENT_EMPLOYMENT  \\\n",
       "72    334111.0                           0                        0.0   \n",
       "73    516110.0                           0                        0.0   \n",
       "75    541512.0                           0                        0.0   \n",
       "79    518112.0                           1                        0.0   \n",
       "84     31222.0                           0                        0.0   \n",
       "\n",
       "    CHANGE_EMPLOYER  AMENDED_PETITION  WAGE_RATE_OF_PAY_FROM_1  \\\n",
       "72                0                 0                154232.00   \n",
       "73                1                 0                    47.01   \n",
       "75                1                 0                 47549.00   \n",
       "79                0                 0                214230.00   \n",
       "84                0                 1                 90000.00   \n",
       "\n",
       "    WAGE_RATE_OF_PAY_TO_1  TOTAL_WORKER_POSITIONS  PREVAILING_WAGE_1  \\\n",
       "72              225400.00                     1.0          154232.00   \n",
       "73                  47.01                     1.0              47.01   \n",
       "75               47549.00                     1.0           47549.00   \n",
       "79              214230.00                     1.0          156146.00   \n",
       "84              110000.00                     1.0           75026.00   \n",
       "\n",
       "    AGENT_REPRESENTING_EMPLOYER_1  ...  H-1B_DEPENDENT_1  \\\n",
       "72                              1  ...                 1   \n",
       "73                              1  ...                 1   \n",
       "75                              1  ...                 1   \n",
       "79                              1  ...                 0   \n",
       "84                              1  ...                 1   \n",
       "\n",
       "    SECONDARY_ENTITY_1_1  WILLFUL_VIOLATOR_1  JOB_TITLE_freq  \\\n",
       "72                     1                   1        0.000003   \n",
       "73                     1                   1        0.000014   \n",
       "75                     1                   1        0.000003   \n",
       "79                     1                   1        0.000003   \n",
       "84                     1                   1        0.000003   \n",
       "\n",
       "    EMPLOYER_NAME_freq  SOC_TITLE_freq  SOC_CODE_freq  NEW_EMPLOYMENT_freq  \\\n",
       "72            0.001712        0.000247       0.000251             0.542003   \n",
       "73            0.000003        0.000247       0.000251             0.542003   \n",
       "75            0.000003        0.000247       0.000251             0.542003   \n",
       "79            0.000929        0.000247       0.000251             0.542003   \n",
       "84            0.000003        0.000247       0.000251             0.542003   \n",
       "\n",
       "    CONTINUED_EMPLOYMENT_freq  WAGE_UNIT_OF_PAY_1_freq  \n",
       "72                   0.211431                 0.941281  \n",
       "73                   0.770312                 0.058002  \n",
       "75                   0.770312                 0.941281  \n",
       "79                   0.770312                 0.941281  \n",
       "84                   0.770312                 0.941281  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "72    CERTIFIED\n",
       "73    CERTIFIED\n",
       "75    CERTIFIED\n",
       "79    CERTIFIED\n",
       "84    CERTIFIED\n",
       "Name: CASE_STATUS, dtype: object"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [],
   "source": [
    "sc_x = StandardScaler()\n",
    "x_train = sc_x.fit_transform(x_train)\n",
    "x_test = sc_x.fit_transform(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Naive Bayes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BernoulliNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BernoulliNB</label><div class=\"sk-toggleable__content\"><pre>BernoulliNB()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "BernoulliNB()"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "NBclassifier = BernoulliNB()\n",
    "NBclassifier.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred_NB = NBclassifier.predict(x_test) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[85418,    85],\n",
       "       [  699,     4]], dtype=int64)"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#confusion matrix\n",
    "cmNB = confusion_matrix(y_test, y_pred_NB)\n",
    "cmNB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9909055054172563"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking accuracy\n",
    "accuracy_score(y_test, y_pred_NB)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#NB Gaussian \n",
    "# train a Gaussian Naive Bayes classifier on the training set\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "\n",
    "gnb = GaussianNB()\n",
    "\n",
    "# fit the model\n",
    "gnb.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = gnb.predict(x_test)\n",
    "\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "from sklearn.metrics import accuracy_score\n",
    "print(classification_report(y_test, y_pred))\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, random_state=0)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier(criterion='entropy', random_state=0)"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DTclassifier = DecisionTreeClassifier(criterion='entropy', random_state=0)  \n",
    "DTclassifier.fit(x_train, y_train) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred_DT = DTclassifier.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[84990,   513],\n",
       "       [  657,    46]], dtype=int64)"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#confusion matrix\n",
    "cmDT = confusion_matrix(y_test, y_pred_DT)\n",
    "cmDT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.986427858849732"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking accuracy\n",
    "accuracy_score(y_test, y_pred_DT)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "H-1B (EDA).ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  },
  "vscode": {
   "interpreter": {
    "hash": "a1972677dd7340cae6bc0f059474240af251eda67a9c593d35831fedf27d03e4"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
